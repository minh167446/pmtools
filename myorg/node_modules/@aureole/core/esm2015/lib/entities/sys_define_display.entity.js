/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Column, Entity, PrimaryColumn } from 'typeorm';
let SysDefineDisplay = class SysDefineDisplay {
};
tslib_1.__decorate([
    PrimaryColumn('character varying', { length: 20 }),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "company", void 0);
tslib_1.__decorate([
    PrimaryColumn('character varying', { length: 20 }),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "emp_id", void 0);
tslib_1.__decorate([
    PrimaryColumn('character varying', { length: 20 }),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "pid", void 0);
tslib_1.__decorate([
    PrimaryColumn('character varying', { length: 20 }),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "group_id", void 0);
tslib_1.__decorate([
    PrimaryColumn('integer'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "item_no", void 0);
tslib_1.__decorate([
    Column('integer'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "disp_no", void 0);
tslib_1.__decorate([
    Column('boolean'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "item_disp", void 0);
tslib_1.__decorate([
    Column('integer'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "width", void 0);
tslib_1.__decorate([
    Column('integer'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "height", void 0);
tslib_1.__decorate([
    Column('integer'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "row_start", void 0);
tslib_1.__decorate([
    Column('integer'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "row_end", void 0);
tslib_1.__decorate([
    Column('integer'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "col_start", void 0);
tslib_1.__decorate([
    Column('integer'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "col_end", void 0);
tslib_1.__decorate([
    Column('text'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "color_bg", void 0);
tslib_1.__decorate([
    Column('text'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "color_text", void 0);
tslib_1.__decorate([
    Column('text'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "class", void 0);
tslib_1.__decorate([
    Column('text'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "stype", void 0);
tslib_1.__decorate([
    Column('integer'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "change_count", void 0);
tslib_1.__decorate([
    Column('character varying', { length: 20 }),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "create_emp_id", void 0);
tslib_1.__decorate([
    Column('timestamp without time zone'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "create_datetime", void 0);
tslib_1.__decorate([
    Column('character varying', { length: 20 }),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "change_emp_id", void 0);
tslib_1.__decorate([
    Column('timestamp without time zone'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "change_datetime", void 0);
tslib_1.__decorate([
    Column('character'),
    tslib_1.__metadata("design:type", Object)
], SysDefineDisplay.prototype, "data_flag", void 0);
SysDefineDisplay = tslib_1.__decorate([
    Entity()
], SysDefineDisplay);
export { SysDefineDisplay };
if (false) {
    /** @type {?} */
    SysDefineDisplay.prototype.company;
    /** @type {?} */
    SysDefineDisplay.prototype.emp_id;
    /** @type {?} */
    SysDefineDisplay.prototype.pid;
    /** @type {?} */
    SysDefineDisplay.prototype.group_id;
    /** @type {?} */
    SysDefineDisplay.prototype.item_no;
    /** @type {?} */
    SysDefineDisplay.prototype.disp_no;
    /** @type {?} */
    SysDefineDisplay.prototype.item_disp;
    /** @type {?} */
    SysDefineDisplay.prototype.width;
    /** @type {?} */
    SysDefineDisplay.prototype.height;
    /** @type {?} */
    SysDefineDisplay.prototype.row_start;
    /** @type {?} */
    SysDefineDisplay.prototype.row_end;
    /** @type {?} */
    SysDefineDisplay.prototype.col_start;
    /** @type {?} */
    SysDefineDisplay.prototype.col_end;
    /** @type {?} */
    SysDefineDisplay.prototype.color_bg;
    /** @type {?} */
    SysDefineDisplay.prototype.color_text;
    /** @type {?} */
    SysDefineDisplay.prototype.class;
    /** @type {?} */
    SysDefineDisplay.prototype.stype;
    /** @type {?} */
    SysDefineDisplay.prototype.change_count;
    /** @type {?} */
    SysDefineDisplay.prototype.create_emp_id;
    /** @type {?} */
    SysDefineDisplay.prototype.create_datetime;
    /** @type {?} */
    SysDefineDisplay.prototype.change_emp_id;
    /** @type {?} */
    SysDefineDisplay.prototype.change_datetime;
    /** @type {?} */
    SysDefineDisplay.prototype.data_flag;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3lzX2RlZmluZV9kaXNwbGF5LmVudGl0eS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhaXQvYWl0LWNvcmUvIiwic291cmNlcyI6WyJsaWIvZW50aXRpZXMvc3lzX2RlZmluZV9kaXNwbGF5LmVudGl0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLGFBQWEsRUFBRSxNQUFNLFNBQVMsQ0FBQztJQUczQyxnQkFBZ0IsU0FBaEIsZ0JBQWdCO0NBcUU1QixDQUFBO0FBbkVDO0lBREMsYUFBYSxDQUFDLG1CQUFtQixFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUFDOztpREFDdEM7QUFHYjtJQURDLGFBQWEsQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsQ0FBQzs7Z0RBQ3ZDO0FBR1o7SUFEQyxhQUFhLENBQUMsbUJBQW1CLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUM7OzZDQUMxQztBQUdUO0lBREMsYUFBYSxDQUFDLG1CQUFtQixFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUFDOztrREFDckM7QUFHZDtJQURDLGFBQWEsQ0FBQyxTQUFTLENBQUM7O2lEQUNaO0FBR2I7SUFEQyxNQUFNLENBQUMsU0FBUyxDQUFDOztpREFDTDtBQUdiO0lBREMsTUFBTSxDQUFDLFNBQVMsQ0FBQzs7bURBQ0g7QUFHZjtJQURDLE1BQU0sQ0FBQyxTQUFTLENBQUM7OytDQUNQO0FBR1g7SUFEQyxNQUFNLENBQUMsU0FBUyxDQUFDOztnREFDTjtBQUdaO0lBREMsTUFBTSxDQUFDLFNBQVMsQ0FBQzs7bURBQ0g7QUFHZjtJQURDLE1BQU0sQ0FBQyxTQUFTLENBQUM7O2lEQUNMO0FBR2I7SUFEQyxNQUFNLENBQUMsU0FBUyxDQUFDOzttREFDSDtBQUdmO0lBREMsTUFBTSxDQUFDLFNBQVMsQ0FBQzs7aURBQ0w7QUFHYjtJQURDLE1BQU0sQ0FBQyxNQUFNLENBQUM7O2tEQUNEO0FBR2Q7SUFEQyxNQUFNLENBQUMsTUFBTSxDQUFDOztvREFDQztBQUdoQjtJQURDLE1BQU0sQ0FBQyxNQUFNLENBQUM7OytDQUNKO0FBR1g7SUFEQyxNQUFNLENBQUMsTUFBTSxDQUFDOzsrQ0FDSjtBQUdYO0lBREMsTUFBTSxDQUFDLFNBQVMsQ0FBQzs7c0RBQ0E7QUFHbEI7SUFEQyxNQUFNLENBQUMsbUJBQW1CLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUM7O3VEQUN6QjtBQUduQjtJQURDLE1BQU0sQ0FBQyw2QkFBNkIsQ0FBQzs7eURBQ2pCO0FBR3JCO0lBREMsTUFBTSxDQUFDLG1CQUFtQixFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUFDOzt1REFDekI7QUFHbkI7SUFEQyxNQUFNLENBQUMsNkJBQTZCLENBQUM7O3lEQUNqQjtBQUdyQjtJQURDLE1BQU0sQ0FBQyxXQUFXLENBQUM7O21EQUNMO0FBcEVKLGdCQUFnQjtJQUQ1QixNQUFNLEVBQUU7R0FDSSxnQkFBZ0IsQ0FxRTVCO1NBckVZLGdCQUFnQjs7O0lBQzNCLG1DQUNhOztJQUViLGtDQUNZOztJQUVaLCtCQUNTOztJQUVULG9DQUNjOztJQUVkLG1DQUNhOztJQUViLG1DQUNhOztJQUViLHFDQUNlOztJQUVmLGlDQUNXOztJQUVYLGtDQUNZOztJQUVaLHFDQUNlOztJQUVmLG1DQUNhOztJQUViLHFDQUNlOztJQUVmLG1DQUNhOztJQUViLG9DQUNjOztJQUVkLHNDQUNnQjs7SUFFaEIsaUNBQ1c7O0lBRVgsaUNBQ1c7O0lBRVgsd0NBQ2tCOztJQUVsQix5Q0FDbUI7O0lBRW5CLDJDQUNxQjs7SUFFckIseUNBQ21COztJQUVuQiwyQ0FDcUI7O0lBRXJCLHFDQUNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sdW1uLCBFbnRpdHksIFByaW1hcnlDb2x1bW4gfSBmcm9tICd0eXBlb3JtJztcclxuXHJcbkBFbnRpdHkoKVxyXG5leHBvcnQgY2xhc3MgU3lzRGVmaW5lRGlzcGxheSB7XHJcbiAgQFByaW1hcnlDb2x1bW4oJ2NoYXJhY3RlciB2YXJ5aW5nJywgeyBsZW5ndGg6IDIwIH0pXHJcbiAgY29tcGFueTogYW55O1xyXG5cclxuICBAUHJpbWFyeUNvbHVtbignY2hhcmFjdGVyIHZhcnlpbmcnLCB7IGxlbmd0aDogMjAgfSlcclxuICBlbXBfaWQ6IGFueTtcclxuXHJcbiAgQFByaW1hcnlDb2x1bW4oJ2NoYXJhY3RlciB2YXJ5aW5nJywgeyBsZW5ndGg6IDIwIH0pXHJcbiAgcGlkOiBhbnk7XHJcblxyXG4gIEBQcmltYXJ5Q29sdW1uKCdjaGFyYWN0ZXIgdmFyeWluZycsIHsgbGVuZ3RoOiAyMCB9KVxyXG4gIGdyb3VwX2lkOiBhbnk7XHJcblxyXG4gIEBQcmltYXJ5Q29sdW1uKCdpbnRlZ2VyJylcclxuICBpdGVtX25vOiBhbnk7XHJcblxyXG4gIEBDb2x1bW4oJ2ludGVnZXInKVxyXG4gIGRpc3Bfbm86IGFueTtcclxuXHJcbiAgQENvbHVtbignYm9vbGVhbicpXHJcbiAgaXRlbV9kaXNwOiBhbnk7XHJcblxyXG4gIEBDb2x1bW4oJ2ludGVnZXInKVxyXG4gIHdpZHRoOiBhbnk7XHJcblxyXG4gIEBDb2x1bW4oJ2ludGVnZXInKVxyXG4gIGhlaWdodDogYW55O1xyXG5cclxuICBAQ29sdW1uKCdpbnRlZ2VyJylcclxuICByb3dfc3RhcnQ6IGFueTtcclxuXHJcbiAgQENvbHVtbignaW50ZWdlcicpXHJcbiAgcm93X2VuZDogYW55O1xyXG5cclxuICBAQ29sdW1uKCdpbnRlZ2VyJylcclxuICBjb2xfc3RhcnQ6IGFueTtcclxuXHJcbiAgQENvbHVtbignaW50ZWdlcicpXHJcbiAgY29sX2VuZDogYW55O1xyXG5cclxuICBAQ29sdW1uKCd0ZXh0JylcclxuICBjb2xvcl9iZzogYW55O1xyXG5cclxuICBAQ29sdW1uKCd0ZXh0JylcclxuICBjb2xvcl90ZXh0OiBhbnk7XHJcblxyXG4gIEBDb2x1bW4oJ3RleHQnKVxyXG4gIGNsYXNzOiBhbnk7XHJcblxyXG4gIEBDb2x1bW4oJ3RleHQnKVxyXG4gIHN0eXBlOiBhbnk7XHJcblxyXG4gIEBDb2x1bW4oJ2ludGVnZXInKVxyXG4gIGNoYW5nZV9jb3VudDogYW55O1xyXG5cclxuICBAQ29sdW1uKCdjaGFyYWN0ZXIgdmFyeWluZycsIHsgbGVuZ3RoOiAyMCB9KVxyXG4gIGNyZWF0ZV9lbXBfaWQ6IGFueTtcclxuXHJcbiAgQENvbHVtbigndGltZXN0YW1wIHdpdGhvdXQgdGltZSB6b25lJylcclxuICBjcmVhdGVfZGF0ZXRpbWU6IGFueTtcclxuXHJcbiAgQENvbHVtbignY2hhcmFjdGVyIHZhcnlpbmcnLCB7IGxlbmd0aDogMjAgfSlcclxuICBjaGFuZ2VfZW1wX2lkOiBhbnk7XHJcblxyXG4gIEBDb2x1bW4oJ3RpbWVzdGFtcCB3aXRob3V0IHRpbWUgem9uZScpXHJcbiAgY2hhbmdlX2RhdGV0aW1lOiBhbnk7XHJcblxyXG4gIEBDb2x1bW4oJ2NoYXJhY3RlcicpXHJcbiAgZGF0YV9mbGFnOiBhbnk7XHJcbn1cclxuIl19