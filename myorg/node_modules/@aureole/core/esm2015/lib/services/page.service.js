/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { SysPage } from '../entities/sys_page.entity';
let PageService = class PageService {
    /**
     * @param {?} pageRepository
     */
    constructor(pageRepository) {
        this.pageRepository = pageRepository;
    }
    /**
     * @param {?} context
     * @return {?}
     */
    getPages(context) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return yield this.pageRepository.find({
                company: context.company,
                lang: context.lang,
                mid: context.mid
            });
        });
    }
    /**
     * @param {?} context
     * @return {?}
     */
    getPage(context) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return yield this.pageRepository.find({
                company: context.company,
                lang: context.lang,
                mid: context.mid,
                pid: context.pid
            });
        });
    }
};
PageService = tslib_1.__decorate([
    Injectable(),
    tslib_1.__param(0, InjectRepository(SysPage)),
    tslib_1.__metadata("design:paramtypes", [Repository])
], PageService);
export { PageService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PageService.prototype.pageRepository;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFpdC9haXQtY29yZS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9wYWdlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDbkQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUVyQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7SUFHekMsV0FBVyxTQUFYLFdBQVc7Ozs7SUFDdEIsWUFFbUIsY0FBbUM7UUFBbkMsbUJBQWMsR0FBZCxjQUFjLENBQXFCO0lBQ25ELENBQUM7Ozs7O0lBRUUsUUFBUSxDQUFDLE9BQVk7O1lBQ3pCLE9BQU8sTUFBTSxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQztnQkFDcEMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPO2dCQUN4QixJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUk7Z0JBQ2xCLEdBQUcsRUFBRSxPQUFPLENBQUMsR0FBRzthQUNqQixDQUFDLENBQUM7UUFDTCxDQUFDO0tBQUE7Ozs7O0lBRUssT0FBTyxDQUFDLE9BQVk7O1lBQ3hCLE9BQU8sTUFBTSxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQztnQkFDcEMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPO2dCQUN4QixJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUk7Z0JBQ2xCLEdBQUcsRUFBRSxPQUFPLENBQUMsR0FBRztnQkFDaEIsR0FBRyxFQUFFLE9BQU8sQ0FBQyxHQUFHO2FBQ2pCLENBQUMsQ0FBQztRQUNMLENBQUM7S0FBQTtDQUNGLENBQUE7QUF0QlksV0FBVztJQUR2QixVQUFVLEVBQUU7SUFHUixtQkFBQSxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQTs2Q0FDTyxVQUFVO0dBSGxDLFdBQVcsQ0FzQnZCO1NBdEJZLFdBQVc7Ozs7OztJQUVwQixxQ0FDb0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xyXG5pbXBvcnQgeyBJbmplY3RSZXBvc2l0b3J5IH0gZnJvbSAnQG5lc3Rqcy90eXBlb3JtJztcclxuaW1wb3J0IHsgUmVwb3NpdG9yeSB9IGZyb20gJ3R5cGVvcm0nO1xyXG5cclxuaW1wb3J0IHsgU3lzUGFnZSB9IGZyb20gJy4uL2VudGl0aWVzL3N5c19wYWdlLmVudGl0eSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBQYWdlU2VydmljZSB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBASW5qZWN0UmVwb3NpdG9yeShTeXNQYWdlKVxyXG4gICAgcHJpdmF0ZSByZWFkb25seSBwYWdlUmVwb3NpdG9yeTogUmVwb3NpdG9yeTxTeXNQYWdlPlxyXG4gICkge31cclxuXHJcbiAgYXN5bmMgZ2V0UGFnZXMoY29udGV4dDogYW55KSB7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5wYWdlUmVwb3NpdG9yeS5maW5kKHtcclxuICAgICAgY29tcGFueTogY29udGV4dC5jb21wYW55LFxyXG4gICAgICBsYW5nOiBjb250ZXh0LmxhbmcsXHJcbiAgICAgIG1pZDogY29udGV4dC5taWRcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYXN5bmMgZ2V0UGFnZShjb250ZXh0OiBhbnkpIHtcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLnBhZ2VSZXBvc2l0b3J5LmZpbmQoe1xyXG4gICAgICBjb21wYW55OiBjb250ZXh0LmNvbXBhbnksXHJcbiAgICAgIGxhbmc6IGNvbnRleHQubGFuZyxcclxuICAgICAgbWlkOiBjb250ZXh0Lm1pZCxcclxuICAgICAgcGlkOiBjb250ZXh0LnBpZFxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==