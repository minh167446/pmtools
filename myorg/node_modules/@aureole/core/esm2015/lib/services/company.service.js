/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { SysCompany } from '../entities/sys_company.entity';
let CompanyService = class CompanyService {
    /**
     * @param {?} companyRepository
     */
    constructor(companyRepository) {
        this.companyRepository = companyRepository;
    }
    /**
     * @param {?} context
     * @return {?}
     */
    getCompanies(context) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return yield this.companyRepository.find({
                lang: context.lang
            });
        });
    }
    /**
     * @param {?} context
     * @return {?}
     */
    getCompany(context) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return yield this.companyRepository.find({
                lang: context.lang,
                code: context.code
            });
        });
    }
};
CompanyService = tslib_1.__decorate([
    Injectable(),
    tslib_1.__param(0, InjectRepository(SysCompany)),
    tslib_1.__metadata("design:paramtypes", [Repository])
], CompanyService);
export { CompanyService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    CompanyService.prototype.companyRepository;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGFueS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFpdC9haXQtY29yZS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9jb21wYW55LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDbkQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUVyQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7SUFHL0MsY0FBYyxTQUFkLGNBQWM7Ozs7SUFDekIsWUFFbUIsaUJBQXlDO1FBQXpDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBd0I7SUFDekQsQ0FBQzs7Ozs7SUFFRSxZQUFZLENBQUMsT0FBWTs7WUFDN0IsT0FBTyxNQUFNLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUM7Z0JBQ3ZDLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSTthQUNuQixDQUFDLENBQUM7UUFDTCxDQUFDO0tBQUE7Ozs7O0lBRUssVUFBVSxDQUFDLE9BQVk7O1lBQzNCLE9BQU8sTUFBTSxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDO2dCQUN2QyxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUk7Z0JBQ2xCLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSTthQUNuQixDQUFDLENBQUM7UUFDTCxDQUFDO0tBQUE7Q0FDRixDQUFBO0FBbEJZLGNBQWM7SUFEMUIsVUFBVSxFQUFFO0lBR1IsbUJBQUEsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUE7NkNBQ08sVUFBVTtHQUhyQyxjQUFjLENBa0IxQjtTQWxCWSxjQUFjOzs7Ozs7SUFFdkIsMkNBQzBEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcclxuaW1wb3J0IHsgSW5qZWN0UmVwb3NpdG9yeSB9IGZyb20gJ0BuZXN0anMvdHlwZW9ybSc7XHJcbmltcG9ydCB7IFJlcG9zaXRvcnkgfSBmcm9tICd0eXBlb3JtJztcclxuXHJcbmltcG9ydCB7IFN5c0NvbXBhbnkgfSBmcm9tICcuLi9lbnRpdGllcy9zeXNfY29tcGFueS5lbnRpdHknO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQ29tcGFueVNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgQEluamVjdFJlcG9zaXRvcnkoU3lzQ29tcGFueSlcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgY29tcGFueVJlcG9zaXRvcnk6IFJlcG9zaXRvcnk8U3lzQ29tcGFueT5cclxuICApIHt9XHJcblxyXG4gIGFzeW5jIGdldENvbXBhbmllcyhjb250ZXh0OiBhbnkpIHtcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLmNvbXBhbnlSZXBvc2l0b3J5LmZpbmQoe1xyXG4gICAgICBsYW5nOiBjb250ZXh0LmxhbmdcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYXN5bmMgZ2V0Q29tcGFueShjb250ZXh0OiBhbnkpIHtcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLmNvbXBhbnlSZXBvc2l0b3J5LmZpbmQoe1xyXG4gICAgICBsYW5nOiBjb250ZXh0LmxhbmcsXHJcbiAgICAgIGNvZGU6IGNvbnRleHQuY29kZVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==