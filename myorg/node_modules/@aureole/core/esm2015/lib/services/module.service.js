/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { SysModule } from '../entities/sys_module.entity';
let ModuleService = class ModuleService {
    /**
     * @param {?} moduleRepository
     */
    constructor(moduleRepository) {
        this.moduleRepository = moduleRepository;
    }
    /**
     * @param {?} context
     * @return {?}
     */
    getModules(context) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return yield this.moduleRepository.find({
                company: context.company,
                lang: context.lang
            });
        });
    }
    /**
     * @param {?} context
     * @return {?}
     */
    getModule(context) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return yield this.moduleRepository.find({
                company: context.company,
                lang: context.lang,
                mid: context.mid
            });
        });
    }
};
ModuleService = tslib_1.__decorate([
    Injectable(),
    tslib_1.__param(0, InjectRepository(SysModule)),
    tslib_1.__metadata("design:paramtypes", [Repository])
], ModuleService);
export { ModuleService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ModuleService.prototype.moduleRepository;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWl0L2FpdC1jb3JlLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL21vZHVsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzVDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFckMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLCtCQUErQixDQUFDO0lBRzdDLGFBQWEsU0FBYixhQUFhOzs7O0lBQ3hCLFlBRW1CLGdCQUF1QztRQUF2QyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQXVCO0lBQ3ZELENBQUM7Ozs7O0lBRUUsVUFBVSxDQUFDLE9BQVk7O1lBQzNCLE9BQU8sTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDO2dCQUN0QyxPQUFPLEVBQUUsT0FBTyxDQUFDLE9BQU87Z0JBQ3hCLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSTthQUNuQixDQUFDLENBQUM7UUFDTCxDQUFDO0tBQUE7Ozs7O0lBRUssU0FBUyxDQUFDLE9BQVk7O1lBQzFCLE9BQU8sTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDO2dCQUN0QyxPQUFPLEVBQUUsT0FBTyxDQUFDLE9BQU87Z0JBQ3hCLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSTtnQkFDbEIsR0FBRyxFQUFFLE9BQU8sQ0FBQyxHQUFHO2FBQ2pCLENBQUMsQ0FBQztRQUNMLENBQUM7S0FBQTtDQUNGLENBQUE7QUFwQlksYUFBYTtJQUR6QixVQUFVLEVBQUU7SUFHUixtQkFBQSxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsQ0FBQTs2Q0FDTyxVQUFVO0dBSHBDLGFBQWEsQ0FvQnpCO1NBcEJZLGFBQWE7Ozs7OztJQUV0Qix5Q0FDd0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xyXG5pbXBvcnQgeyBJbmplY3RSZXBvc2l0b3J5IH0gZnJvbSAnQG5lc3Rqcy90eXBlb3JtJztcclxuaW1wb3J0IHsgUmVwb3NpdG9yeSB9IGZyb20gJ3R5cGVvcm0nO1xyXG5cclxuaW1wb3J0IHsgU3lzTW9kdWxlIH0gZnJvbSAnLi4vZW50aXRpZXMvc3lzX21vZHVsZS5lbnRpdHknO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgTW9kdWxlU2VydmljZSB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBASW5qZWN0UmVwb3NpdG9yeShTeXNNb2R1bGUpXHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IG1vZHVsZVJlcG9zaXRvcnk6IFJlcG9zaXRvcnk8U3lzTW9kdWxlPlxyXG4gICkge31cclxuXHJcbiAgYXN5bmMgZ2V0TW9kdWxlcyhjb250ZXh0OiBhbnkpIHtcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLm1vZHVsZVJlcG9zaXRvcnkuZmluZCh7XHJcbiAgICAgIGNvbXBhbnk6IGNvbnRleHQuY29tcGFueSxcclxuICAgICAgbGFuZzogY29udGV4dC5sYW5nXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGFzeW5jIGdldE1vZHVsZShjb250ZXh0OiBhbnkpIHtcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLm1vZHVsZVJlcG9zaXRvcnkuZmluZCh7XHJcbiAgICAgIGNvbXBhbnk6IGNvbnRleHQuY29tcGFueSxcclxuICAgICAgbGFuZzogY29udGV4dC5sYW5nLFxyXG4gICAgICBtaWQ6IGNvbnRleHQubWlkXHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIl19