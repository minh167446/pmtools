/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { SysDefineClass } from '../entities/sys_define_class.entity';
import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
let DefineClassService = class DefineClassService {
    /**
     * @param {?} defineClassRepository
     */
    constructor(defineClassRepository) {
        this.defineClassRepository = defineClassRepository;
    }
    /**
     * @param {?} context
     * @return {?}
     */
    getDefineClasses(context) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return yield this.defineClassRepository.find({
                company: context.company,
                lang: context.lang
            });
        });
    }
    /**
     * @param {?} context
     * @return {?}
     */
    getDefineClass(context) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return yield this.defineClassRepository.find({
                company: context.company,
                lang: context.lang,
                code: context.code
            });
        });
    }
};
DefineClassService = tslib_1.__decorate([
    Injectable(),
    tslib_1.__param(0, InjectRepository(SysDefineClass)),
    tslib_1.__metadata("design:paramtypes", [Repository])
], DefineClassService);
export { DefineClassService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefineClassService.prototype.defineClassRepository;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmaW5lLWNsYXNzLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWl0L2FpdC1jb3JlLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL2RlZmluZS1jbGFzcy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sU0FBUyxDQUFDO0lBR3hCLGtCQUFrQixTQUFsQixrQkFBa0I7Ozs7SUFDN0IsWUFFbUIscUJBQWlEO1FBQWpELDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBNEI7SUFDakUsQ0FBQzs7Ozs7SUFFRSxnQkFBZ0IsQ0FBQyxPQUFZOztZQUNqQyxPQUFPLE1BQU0sSUFBSSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQztnQkFDM0MsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPO2dCQUN4QixJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUk7YUFDbkIsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztLQUFBOzs7OztJQUVLLGNBQWMsQ0FBQyxPQUFZOztZQUMvQixPQUFPLE1BQU0sSUFBSSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQztnQkFDM0MsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPO2dCQUN4QixJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUk7Z0JBQ2xCLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSTthQUNuQixDQUFDLENBQUM7UUFDTCxDQUFDO0tBQUE7Q0FDRixDQUFBO0FBcEJZLGtCQUFrQjtJQUQ5QixVQUFVLEVBQUU7SUFHUixtQkFBQSxnQkFBZ0IsQ0FBQyxjQUFjLENBQUMsQ0FBQTs2Q0FDTyxVQUFVO0dBSHpDLGtCQUFrQixDQW9COUI7U0FwQlksa0JBQWtCOzs7Ozs7SUFFM0IsbURBQ2tFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3lzRGVmaW5lQ2xhc3MgfSBmcm9tICcuLi9lbnRpdGllcy9zeXNfZGVmaW5lX2NsYXNzLmVudGl0eSc7XHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XHJcbmltcG9ydCB7IEluamVjdFJlcG9zaXRvcnkgfSBmcm9tICdAbmVzdGpzL3R5cGVvcm0nO1xyXG5pbXBvcnQgeyBSZXBvc2l0b3J5IH0gZnJvbSAndHlwZW9ybSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBEZWZpbmVDbGFzc1NlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgQEluamVjdFJlcG9zaXRvcnkoU3lzRGVmaW5lQ2xhc3MpXHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGRlZmluZUNsYXNzUmVwb3NpdG9yeTogUmVwb3NpdG9yeTxTeXNEZWZpbmVDbGFzcz5cclxuICApIHt9XHJcblxyXG4gIGFzeW5jIGdldERlZmluZUNsYXNzZXMoY29udGV4dDogYW55KSB7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5kZWZpbmVDbGFzc1JlcG9zaXRvcnkuZmluZCh7XHJcbiAgICAgIGNvbXBhbnk6IGNvbnRleHQuY29tcGFueSxcclxuICAgICAgbGFuZzogY29udGV4dC5sYW5nXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGFzeW5jIGdldERlZmluZUNsYXNzKGNvbnRleHQ6IGFueSkge1xyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZGVmaW5lQ2xhc3NSZXBvc2l0b3J5LmZpbmQoe1xyXG4gICAgICBjb21wYW55OiBjb250ZXh0LmNvbXBhbnksXHJcbiAgICAgIGxhbmc6IGNvbnRleHQubGFuZyxcclxuICAgICAgY29kZTogY29udGV4dC5jb2RlXHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIl19