/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { SysDefineMapping } from '../entities/sys_define_mapping.entity';
let DefineMappingService = class DefineMappingService {
    /**
     * @param {?} defineMappingRepository
     */
    constructor(defineMappingRepository) {
        this.defineMappingRepository = defineMappingRepository;
    }
    /**
     * @param {?} context
     * @return {?}
     */
    getDefineMapping(context) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return yield this.defineMappingRepository.find({
                company: context.company,
                pid: context.pid
            });
        });
    }
};
DefineMappingService = tslib_1.__decorate([
    Injectable(),
    tslib_1.__param(0, InjectRepository(SysDefineMapping)),
    tslib_1.__metadata("design:paramtypes", [Repository])
], DefineMappingService);
export { DefineMappingService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefineMappingService.prototype.defineMappingRepository;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmaW5lLW1hcHBpbmcuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhaXQvYWl0LWNvcmUvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvZGVmaW5lLW1hcHBpbmcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRXJDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0lBRzVELG9CQUFvQixTQUFwQixvQkFBb0I7Ozs7SUFDL0IsWUFFbUIsdUJBQXFEO1FBQXJELDRCQUF1QixHQUF2Qix1QkFBdUIsQ0FBOEI7SUFDckUsQ0FBQzs7Ozs7SUFFRSxnQkFBZ0IsQ0FBQyxPQUFZOztZQUNqQyxPQUFPLE1BQU0sSUFBSSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQztnQkFDN0MsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPO2dCQUN4QixHQUFHLEVBQUUsT0FBTyxDQUFDLEdBQUc7YUFDakIsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztLQUFBO0NBQ0YsQ0FBQTtBQVpZLG9CQUFvQjtJQURoQyxVQUFVLEVBQUU7SUFHUixtQkFBQSxnQkFBZ0IsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFBOzZDQUNPLFVBQVU7R0FIM0Msb0JBQW9CLENBWWhDO1NBWlksb0JBQW9COzs7Ozs7SUFFN0IsdURBQ3NFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcclxuaW1wb3J0IHsgSW5qZWN0UmVwb3NpdG9yeSB9IGZyb20gJ0BuZXN0anMvdHlwZW9ybSc7XHJcbmltcG9ydCB7IFJlcG9zaXRvcnkgfSBmcm9tICd0eXBlb3JtJztcclxuXHJcbmltcG9ydCB7IFN5c0RlZmluZU1hcHBpbmcgfSBmcm9tICcuLi9lbnRpdGllcy9zeXNfZGVmaW5lX21hcHBpbmcuZW50aXR5JztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIERlZmluZU1hcHBpbmdTZXJ2aWNlIHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIEBJbmplY3RSZXBvc2l0b3J5KFN5c0RlZmluZU1hcHBpbmcpXHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGRlZmluZU1hcHBpbmdSZXBvc2l0b3J5OiBSZXBvc2l0b3J5PFN5c0RlZmluZU1hcHBpbmc+XHJcbiAgKSB7fVxyXG5cclxuICBhc3luYyBnZXREZWZpbmVNYXBwaW5nKGNvbnRleHQ6IGFueSkge1xyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZGVmaW5lTWFwcGluZ1JlcG9zaXRvcnkuZmluZCh7XHJcbiAgICAgIGNvbXBhbnk6IGNvbnRleHQuY29tcGFueSxcclxuICAgICAgcGlkOiBjb250ZXh0LnBpZFxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==