/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { SysDefineGrid } from '../entities/sys_define_grid.entity';
let DefineGridService = class DefineGridService {
    /**
     * @param {?} defineGridRepository
     */
    constructor(defineGridRepository) {
        this.defineGridRepository = defineGridRepository;
    }
    /**
     * @param {?} context
     * @return {?}
     */
    getDefineGrid(context) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return yield this.defineGridRepository.find({
                company: context.company,
                pid: context.pid,
                grid_id: context.grid_id
            });
        });
    }
};
DefineGridService = tslib_1.__decorate([
    Injectable(),
    tslib_1.__param(0, InjectRepository(SysDefineGrid)),
    tslib_1.__metadata("design:paramtypes", [Repository])
], DefineGridService);
export { DefineGridService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefineGridService.prototype.defineGridRepository;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmaW5lLWdyaWQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhaXQvYWl0LWNvcmUvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvZGVmaW5lLWdyaWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRXJDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztJQUd0RCxpQkFBaUIsU0FBakIsaUJBQWlCOzs7O0lBQzVCLFlBRW1CLG9CQUErQztRQUEvQyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQTJCO0lBQy9ELENBQUM7Ozs7O0lBRUUsYUFBYSxDQUFDLE9BQVk7O1lBQzlCLE9BQU8sTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDO2dCQUMxQyxPQUFPLEVBQUUsT0FBTyxDQUFDLE9BQU87Z0JBQ3hCLEdBQUcsRUFBRSxPQUFPLENBQUMsR0FBRztnQkFDaEIsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPO2FBQ3pCLENBQUMsQ0FBQztRQUNMLENBQUM7S0FBQTtDQUNGLENBQUE7QUFiWSxpQkFBaUI7SUFEN0IsVUFBVSxFQUFFO0lBR1IsbUJBQUEsZ0JBQWdCLENBQUMsYUFBYSxDQUFDLENBQUE7NkNBQ08sVUFBVTtHQUh4QyxpQkFBaUIsQ0FhN0I7U0FiWSxpQkFBaUI7Ozs7OztJQUUxQixpREFDZ0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xyXG5pbXBvcnQgeyBJbmplY3RSZXBvc2l0b3J5IH0gZnJvbSAnQG5lc3Rqcy90eXBlb3JtJztcclxuaW1wb3J0IHsgUmVwb3NpdG9yeSB9IGZyb20gJ3R5cGVvcm0nO1xyXG5cclxuaW1wb3J0IHsgU3lzRGVmaW5lR3JpZCB9IGZyb20gJy4uL2VudGl0aWVzL3N5c19kZWZpbmVfZ3JpZC5lbnRpdHknO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgRGVmaW5lR3JpZFNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgQEluamVjdFJlcG9zaXRvcnkoU3lzRGVmaW5lR3JpZClcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgZGVmaW5lR3JpZFJlcG9zaXRvcnk6IFJlcG9zaXRvcnk8U3lzRGVmaW5lR3JpZD5cclxuICApIHt9XHJcblxyXG4gIGFzeW5jIGdldERlZmluZUdyaWQoY29udGV4dDogYW55KSB7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5kZWZpbmVHcmlkUmVwb3NpdG9yeS5maW5kKHtcclxuICAgICAgY29tcGFueTogY29udGV4dC5jb21wYW55LFxyXG4gICAgICBwaWQ6IGNvbnRleHQucGlkLFxyXG4gICAgICBncmlkX2lkOiBjb250ZXh0LmdyaWRfaWRcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iXX0=