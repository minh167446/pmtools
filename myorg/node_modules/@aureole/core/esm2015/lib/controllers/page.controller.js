/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Body, Controller, Post } from '@nestjs/common';
import { PageService } from '../services/page.service';
let PageController = class PageController {
    /**
     * @param {?} pageService
     */
    constructor(pageService) {
        this.pageService = pageService;
    }
    /**
     * @param {?} body
     * @return {?}
     */
    getPages(body) {
        return this.pageService.getPages(body);
    }
    /**
     * @param {?} body
     * @return {?}
     */
    getPage(body) {
        return this.pageService.getPage(body);
    }
};
tslib_1.__decorate([
    Post('get/many'),
    tslib_1.__param(0, Body()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], PageController.prototype, "getPages", null);
tslib_1.__decorate([
    Post('get/one'),
    tslib_1.__param(0, Body()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], PageController.prototype, "getPage", null);
PageController = tslib_1.__decorate([
    Controller('page'),
    tslib_1.__metadata("design:paramtypes", [PageService])
], PageController);
export { PageController };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PageController.prototype.pageService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFpdC9haXQtY29yZS8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9sbGVycy9wYWdlLmNvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV4RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7SUFHMUMsY0FBYyxTQUFkLGNBQWM7Ozs7SUFDekIsWUFBNkIsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7SUFBRyxDQUFDOzs7OztJQUd6RCxRQUFRLENBQVMsSUFBSTtRQUNuQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pDLENBQUM7Ozs7O0lBR0QsT0FBTyxDQUFTLElBQUk7UUFDbEIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4QyxDQUFDO0NBQ0YsQ0FBQTtBQVJDO0lBREMsSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUNQLG1CQUFBLElBQUksRUFBRSxDQUFBOzs7OzhDQUVmO0FBR0Q7SUFEQyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ1AsbUJBQUEsSUFBSSxFQUFFLENBQUE7Ozs7NkNBRWQ7QUFYVSxjQUFjO0lBRDFCLFVBQVUsQ0FBQyxNQUFNLENBQUM7NkNBRXlCLFdBQVc7R0FEMUMsY0FBYyxDQVkxQjtTQVpZLGNBQWM7Ozs7OztJQUNiLHFDQUF5QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvZHksIENvbnRyb2xsZXIsIFBvc3QgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XHJcblxyXG5pbXBvcnQgeyBQYWdlU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3BhZ2Uuc2VydmljZSc7XHJcblxyXG5AQ29udHJvbGxlcigncGFnZScpXHJcbmV4cG9ydCBjbGFzcyBQYWdlQ29udHJvbGxlciB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBwYWdlU2VydmljZTogUGFnZVNlcnZpY2UpIHt9XHJcblxyXG4gIEBQb3N0KCdnZXQvbWFueScpXHJcbiAgZ2V0UGFnZXMoQEJvZHkoKSBib2R5KSB7XHJcbiAgICByZXR1cm4gdGhpcy5wYWdlU2VydmljZS5nZXRQYWdlcyhib2R5KTtcclxuICB9XHJcblxyXG4gIEBQb3N0KCdnZXQvb25lJylcclxuICBnZXRQYWdlKEBCb2R5KCkgYm9keSkge1xyXG4gICAgcmV0dXJuIHRoaXMucGFnZVNlcnZpY2UuZ2V0UGFnZShib2R5KTtcclxuICB9XHJcbn1cclxuIl19