/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Body, Controller, Post } from '@nestjs/common';
import { DefineMappingFunctionService } from '../services/define-mapping-function.service';
let DefineMappingFunctionController = class DefineMappingFunctionController {
    /**
     * @param {?} defineMappingFunctionService
     */
    constructor(defineMappingFunctionService) {
        this.defineMappingFunctionService = defineMappingFunctionService;
    }
    /**
     * @param {?} body
     * @return {?}
     */
    getDefineMappingFunction(body) {
        return this.defineMappingFunctionService.getDefineMappingFunction(body);
    }
};
tslib_1.__decorate([
    Post('get/many'),
    tslib_1.__param(0, Body()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], DefineMappingFunctionController.prototype, "getDefineMappingFunction", null);
DefineMappingFunctionController = tslib_1.__decorate([
    Controller('define-mapping-function'),
    tslib_1.__metadata("design:paramtypes", [DefineMappingFunctionService])
], DefineMappingFunctionController);
export { DefineMappingFunctionController };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefineMappingFunctionController.prototype.defineMappingFunctionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmaW5lLW1hcHBpbmctZnVuY3Rpb24uY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhaXQvYWl0LWNvcmUvIiwic291cmNlcyI6WyJsaWIvY29udHJvbGxlcnMvZGVmaW5lLW1hcHBpbmctZnVuY3Rpb24uY29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXhELE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0lBRzlFLCtCQUErQixTQUEvQiwrQkFBK0I7Ozs7SUFDMUMsWUFDbUIsNEJBQTBEO1FBQTFELGlDQUE0QixHQUE1Qiw0QkFBNEIsQ0FBOEI7SUFDMUUsQ0FBQzs7Ozs7SUFHSix3QkFBd0IsQ0FBUyxJQUFJO1FBQ25DLE9BQU8sSUFBSSxDQUFDLDRCQUE0QixDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzFFLENBQUM7Q0FDRixDQUFBO0FBSEM7SUFEQyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ1MsbUJBQUEsSUFBSSxFQUFFLENBQUE7Ozs7K0VBRS9CO0FBUlUsK0JBQStCO0lBRDNDLFVBQVUsQ0FBQyx5QkFBeUIsQ0FBQzs2Q0FHYSw0QkFBNEI7R0FGbEUsK0JBQStCLENBUzNDO1NBVFksK0JBQStCOzs7Ozs7SUFFeEMsdUVBQTJFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm9keSwgQ29udHJvbGxlciwgUG9zdCB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcclxuXHJcbmltcG9ydCB7IERlZmluZU1hcHBpbmdGdW5jdGlvblNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9kZWZpbmUtbWFwcGluZy1mdW5jdGlvbi5zZXJ2aWNlJztcclxuXHJcbkBDb250cm9sbGVyKCdkZWZpbmUtbWFwcGluZy1mdW5jdGlvbicpXHJcbmV4cG9ydCBjbGFzcyBEZWZpbmVNYXBwaW5nRnVuY3Rpb25Db250cm9sbGVyIHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgZGVmaW5lTWFwcGluZ0Z1bmN0aW9uU2VydmljZTogRGVmaW5lTWFwcGluZ0Z1bmN0aW9uU2VydmljZVxyXG4gICkge31cclxuXHJcbiAgQFBvc3QoJ2dldC9tYW55JylcclxuICBnZXREZWZpbmVNYXBwaW5nRnVuY3Rpb24oQEJvZHkoKSBib2R5KSB7XHJcbiAgICByZXR1cm4gdGhpcy5kZWZpbmVNYXBwaW5nRnVuY3Rpb25TZXJ2aWNlLmdldERlZmluZU1hcHBpbmdGdW5jdGlvbihib2R5KTtcclxuICB9XHJcbn1cclxuIl19