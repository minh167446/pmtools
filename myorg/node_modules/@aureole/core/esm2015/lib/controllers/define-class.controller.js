/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Body, Controller, Post } from '@nestjs/common';
import { DefineClassService } from '../services/define-class.service';
let DefineClassController = class DefineClassController {
    /**
     * @param {?} defineClassService
     */
    constructor(defineClassService) {
        this.defineClassService = defineClassService;
    }
    /**
     * @param {?} body
     * @return {?}
     */
    getDefineClasses(body) {
        return this.defineClassService.getDefineClasses(body);
    }
    /**
     * @param {?} body
     * @return {?}
     */
    getDefineClass(body) {
        return this.defineClassService.getDefineClass(body);
    }
};
tslib_1.__decorate([
    Post('get/many'),
    tslib_1.__param(0, Body()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], DefineClassController.prototype, "getDefineClasses", null);
tslib_1.__decorate([
    Post('get/one'),
    tslib_1.__param(0, Body()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], DefineClassController.prototype, "getDefineClass", null);
DefineClassController = tslib_1.__decorate([
    Controller('define-class'),
    tslib_1.__metadata("design:paramtypes", [DefineClassService])
], DefineClassController);
export { DefineClassController };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefineClassController.prototype.defineClassService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmaW5lLWNsYXNzLmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWl0L2FpdC1jb3JlLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xsZXJzL2RlZmluZS1jbGFzcy5jb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFeEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7SUFHekQscUJBQXFCLFNBQXJCLHFCQUFxQjs7OztJQUNoQyxZQUE2QixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtJQUFHLENBQUM7Ozs7O0lBR3ZFLGdCQUFnQixDQUFTLElBQUk7UUFDM0IsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEQsQ0FBQzs7Ozs7SUFHRCxjQUFjLENBQVMsSUFBSTtRQUN6QixPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEQsQ0FBQztDQUNGLENBQUE7QUFSQztJQURDLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDQyxtQkFBQSxJQUFJLEVBQUUsQ0FBQTs7Ozs2REFFdkI7QUFHRDtJQURDLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDQSxtQkFBQSxJQUFJLEVBQUUsQ0FBQTs7OzsyREFFckI7QUFYVSxxQkFBcUI7SUFEakMsVUFBVSxDQUFDLGNBQWMsQ0FBQzs2Q0FFd0Isa0JBQWtCO0dBRHhELHFCQUFxQixDQVlqQztTQVpZLHFCQUFxQjs7Ozs7O0lBQ3BCLG1EQUF1RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvZHksIENvbnRyb2xsZXIsIFBvc3QgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XHJcblxyXG5pbXBvcnQgeyBEZWZpbmVDbGFzc1NlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9kZWZpbmUtY2xhc3Muc2VydmljZSc7XHJcblxyXG5AQ29udHJvbGxlcignZGVmaW5lLWNsYXNzJylcclxuZXhwb3J0IGNsYXNzIERlZmluZUNsYXNzQ29udHJvbGxlciB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBkZWZpbmVDbGFzc1NlcnZpY2U6IERlZmluZUNsYXNzU2VydmljZSkge31cclxuXHJcbiAgQFBvc3QoJ2dldC9tYW55JylcclxuICBnZXREZWZpbmVDbGFzc2VzKEBCb2R5KCkgYm9keSkge1xyXG4gICAgcmV0dXJuIHRoaXMuZGVmaW5lQ2xhc3NTZXJ2aWNlLmdldERlZmluZUNsYXNzZXMoYm9keSk7XHJcbiAgfVxyXG5cclxuICBAUG9zdCgnZ2V0L29uZScpXHJcbiAgZ2V0RGVmaW5lQ2xhc3MoQEJvZHkoKSBib2R5KSB7XHJcbiAgICByZXR1cm4gdGhpcy5kZWZpbmVDbGFzc1NlcnZpY2UuZ2V0RGVmaW5lQ2xhc3MoYm9keSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==