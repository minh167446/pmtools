/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Body, Controller, Post } from '@nestjs/common';
import { MasterService } from '../services/master.service';
let MasterController = class MasterController {
    /**
     * @param {?} masterService
     */
    constructor(masterService) {
        this.masterService = masterService;
    }
    /**
     * @param {?} body
     * @return {?}
     */
    getMasters(body) {
        return this.masterService.getMasters(body);
    }
    /**
     * @param {?} body
     * @return {?}
     */
    getMaster(body) {
        return this.masterService.getMaster(body);
    }
};
tslib_1.__decorate([
    Post('get/many'),
    tslib_1.__param(0, Body()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], MasterController.prototype, "getMasters", null);
tslib_1.__decorate([
    Post('get/one'),
    tslib_1.__param(0, Body()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], MasterController.prototype, "getMaster", null);
MasterController = tslib_1.__decorate([
    Controller('master'),
    tslib_1.__metadata("design:paramtypes", [MasterService])
], MasterController);
export { MasterController };
if (false) {
    /**
     * @type {?}
     * @private
     */
    MasterController.prototype.masterService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFzdGVyLmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWl0L2FpdC1jb3JlLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xsZXJzL21hc3Rlci5jb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFeEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0lBRzlDLGdCQUFnQixTQUFoQixnQkFBZ0I7Ozs7SUFDM0IsWUFBNkIsYUFBNEI7UUFBNUIsa0JBQWEsR0FBYixhQUFhLENBQWU7SUFBRyxDQUFDOzs7OztJQUc3RCxVQUFVLENBQVMsSUFBSTtRQUNyQixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdDLENBQUM7Ozs7O0lBR0QsU0FBUyxDQUFTLElBQUk7UUFDcEIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QyxDQUFDO0NBQ0YsQ0FBQTtBQVJDO0lBREMsSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUNMLG1CQUFBLElBQUksRUFBRSxDQUFBOzs7O2tEQUVqQjtBQUdEO0lBREMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUNMLG1CQUFBLElBQUksRUFBRSxDQUFBOzs7O2lEQUVoQjtBQVhVLGdCQUFnQjtJQUQ1QixVQUFVLENBQUMsUUFBUSxDQUFDOzZDQUV5QixhQUFhO0dBRDlDLGdCQUFnQixDQVk1QjtTQVpZLGdCQUFnQjs7Ozs7O0lBQ2YseUNBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm9keSwgQ29udHJvbGxlciwgUG9zdCB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcclxuXHJcbmltcG9ydCB7IE1hc3RlclNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9tYXN0ZXIuc2VydmljZSc7XHJcblxyXG5AQ29udHJvbGxlcignbWFzdGVyJylcclxuZXhwb3J0IGNsYXNzIE1hc3RlckNvbnRyb2xsZXIge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgbWFzdGVyU2VydmljZTogTWFzdGVyU2VydmljZSkge31cclxuXHJcbiAgQFBvc3QoJ2dldC9tYW55JylcclxuICBnZXRNYXN0ZXJzKEBCb2R5KCkgYm9keSkge1xyXG4gICAgcmV0dXJuIHRoaXMubWFzdGVyU2VydmljZS5nZXRNYXN0ZXJzKGJvZHkpO1xyXG4gIH1cclxuXHJcbiAgQFBvc3QoJ2dldC9vbmUnKVxyXG4gIGdldE1hc3RlcihAQm9keSgpIGJvZHkpIHtcclxuICAgIHJldHVybiB0aGlzLm1hc3RlclNlcnZpY2UuZ2V0TWFzdGVyKGJvZHkpO1xyXG4gIH1cclxufVxyXG4iXX0=