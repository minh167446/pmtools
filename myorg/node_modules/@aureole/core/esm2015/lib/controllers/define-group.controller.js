/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Body, Controller, Post } from '@nestjs/common';
import { DefineGroupService } from '../services/define-group.service';
let DefineGroupController = class DefineGroupController {
    /**
     * @param {?} defineGroupService
     */
    constructor(defineGroupService) {
        this.defineGroupService = defineGroupService;
    }
    /**
     * @param {?} body
     * @return {?}
     */
    getDefineGroups(body) {
        return this.defineGroupService.getDefineGroups(body);
    }
    /**
     * @param {?} body
     * @return {?}
     */
    getDefineGroup(body) {
        return this.defineGroupService.getDefineGroup(body);
    }
};
tslib_1.__decorate([
    Post('get/many'),
    tslib_1.__param(0, Body()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], DefineGroupController.prototype, "getDefineGroups", null);
tslib_1.__decorate([
    Post('get/one'),
    tslib_1.__param(0, Body()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], DefineGroupController.prototype, "getDefineGroup", null);
DefineGroupController = tslib_1.__decorate([
    Controller('define-group'),
    tslib_1.__metadata("design:paramtypes", [DefineGroupService])
], DefineGroupController);
export { DefineGroupController };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefineGroupController.prototype.defineGroupService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmaW5lLWdyb3VwLmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWl0L2FpdC1jb3JlLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xsZXJzL2RlZmluZS1ncm91cC5jb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFeEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7SUFHekQscUJBQXFCLFNBQXJCLHFCQUFxQjs7OztJQUNoQyxZQUE2QixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtJQUFHLENBQUM7Ozs7O0lBR3ZFLGVBQWUsQ0FBUyxJQUFJO1FBQzFCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN2RCxDQUFDOzs7OztJQUdELGNBQWMsQ0FBUyxJQUFJO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN0RCxDQUFDO0NBQ0YsQ0FBQTtBQVJDO0lBREMsSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUNBLG1CQUFBLElBQUksRUFBRSxDQUFBOzs7OzREQUV0QjtBQUdEO0lBREMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUNBLG1CQUFBLElBQUksRUFBRSxDQUFBOzs7OzJEQUVyQjtBQVhVLHFCQUFxQjtJQURqQyxVQUFVLENBQUMsY0FBYyxDQUFDOzZDQUV3QixrQkFBa0I7R0FEeEQscUJBQXFCLENBWWpDO1NBWlkscUJBQXFCOzs7Ozs7SUFDcEIsbURBQXVEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm9keSwgQ29udHJvbGxlciwgUG9zdCB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcclxuXHJcbmltcG9ydCB7IERlZmluZUdyb3VwU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2RlZmluZS1ncm91cC5zZXJ2aWNlJztcclxuXHJcbkBDb250cm9sbGVyKCdkZWZpbmUtZ3JvdXAnKVxyXG5leHBvcnQgY2xhc3MgRGVmaW5lR3JvdXBDb250cm9sbGVyIHtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGRlZmluZUdyb3VwU2VydmljZTogRGVmaW5lR3JvdXBTZXJ2aWNlKSB7fVxyXG5cclxuICBAUG9zdCgnZ2V0L21hbnknKVxyXG4gIGdldERlZmluZUdyb3VwcyhAQm9keSgpIGJvZHkpIHtcclxuICAgIHJldHVybiB0aGlzLmRlZmluZUdyb3VwU2VydmljZS5nZXREZWZpbmVHcm91cHMoYm9keSk7XHJcbiAgfVxyXG5cclxuICBAUG9zdCgnZ2V0L29uZScpXHJcbiAgZ2V0RGVmaW5lR3JvdXAoQEJvZHkoKSBib2R5KSB7XHJcbiAgICByZXR1cm4gdGhpcy5kZWZpbmVHcm91cFNlcnZpY2UuZ2V0RGVmaW5lR3JvdXAoYm9keSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==