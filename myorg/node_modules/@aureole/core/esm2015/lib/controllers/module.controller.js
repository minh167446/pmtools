/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Body, Controller, Post } from '@nestjs/common';
import { ModuleService } from '../services/module.service';
let ModuleController = class ModuleController {
    /**
     * @param {?} moduleService
     */
    constructor(moduleService) {
        this.moduleService = moduleService;
    }
    /**
     * @param {?} body
     * @return {?}
     */
    getModules(body) {
        return this.moduleService.getModules(body);
    }
    /**
     * @param {?} body
     * @return {?}
     */
    getModule(body) {
        return this.moduleService.getModule(body);
    }
};
tslib_1.__decorate([
    Post('get/many'),
    tslib_1.__param(0, Body()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], ModuleController.prototype, "getModules", null);
tslib_1.__decorate([
    Post('get/one'),
    tslib_1.__param(0, Body()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], ModuleController.prototype, "getModule", null);
ModuleController = tslib_1.__decorate([
    Controller('module'),
    tslib_1.__metadata("design:paramtypes", [ModuleService])
], ModuleController);
export { ModuleController };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ModuleController.prototype.moduleService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWl0L2FpdC1jb3JlLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xsZXJzL21vZHVsZS5jb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFeEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0lBRzlDLGdCQUFnQixTQUFoQixnQkFBZ0I7Ozs7SUFDM0IsWUFBNkIsYUFBNEI7UUFBNUIsa0JBQWEsR0FBYixhQUFhLENBQWU7SUFBRyxDQUFDOzs7OztJQUc3RCxVQUFVLENBQVMsSUFBSTtRQUNyQixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdDLENBQUM7Ozs7O0lBR0QsU0FBUyxDQUFTLElBQUk7UUFDcEIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QyxDQUFDO0NBQ0YsQ0FBQTtBQVJDO0lBREMsSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUNMLG1CQUFBLElBQUksRUFBRSxDQUFBOzs7O2tEQUVqQjtBQUdEO0lBREMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUNMLG1CQUFBLElBQUksRUFBRSxDQUFBOzs7O2lEQUVoQjtBQVhVLGdCQUFnQjtJQUQ1QixVQUFVLENBQUMsUUFBUSxDQUFDOzZDQUV5QixhQUFhO0dBRDlDLGdCQUFnQixDQVk1QjtTQVpZLGdCQUFnQjs7Ozs7O0lBQ2YseUNBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm9keSwgQ29udHJvbGxlciwgUG9zdCB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcclxuXHJcbmltcG9ydCB7IE1vZHVsZVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9tb2R1bGUuc2VydmljZSc7XHJcblxyXG5AQ29udHJvbGxlcignbW9kdWxlJylcclxuZXhwb3J0IGNsYXNzIE1vZHVsZUNvbnRyb2xsZXIge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgbW9kdWxlU2VydmljZTogTW9kdWxlU2VydmljZSkge31cclxuXHJcbiAgQFBvc3QoJ2dldC9tYW55JylcclxuICBnZXRNb2R1bGVzKEBCb2R5KCkgYm9keSkge1xyXG4gICAgcmV0dXJuIHRoaXMubW9kdWxlU2VydmljZS5nZXRNb2R1bGVzKGJvZHkpO1xyXG4gIH1cclxuXHJcbiAgQFBvc3QoJ2dldC9vbmUnKVxyXG4gIGdldE1vZHVsZShAQm9keSgpIGJvZHkpIHtcclxuICAgIHJldHVybiB0aGlzLm1vZHVsZVNlcnZpY2UuZ2V0TW9kdWxlKGJvZHkpO1xyXG4gIH1cclxufVxyXG4iXX0=