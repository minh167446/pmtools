/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Body, Controller, Post } from '@nestjs/common';
import { CaptionService } from '../services/caption.service';
let CaptionController = class CaptionController {
    /**
     * @param {?} captionService
     */
    constructor(captionService) {
        this.captionService = captionService;
    }
    /**
     * @param {?} body
     * @return {?}
     */
    getCaptions(body) {
        return this.captionService.getCaptions(body);
    }
    /**
     * @param {?} body
     * @return {?}
     */
    getCaption(body) {
        return this.captionService.getCaption(body);
    }
};
tslib_1.__decorate([
    Post('get/many'),
    tslib_1.__param(0, Body()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], CaptionController.prototype, "getCaptions", null);
tslib_1.__decorate([
    Post('get/one'),
    tslib_1.__param(0, Body()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], CaptionController.prototype, "getCaption", null);
CaptionController = tslib_1.__decorate([
    Controller('caption'),
    tslib_1.__metadata("design:paramtypes", [CaptionService])
], CaptionController);
export { CaptionController };
if (false) {
    /**
     * @type {?}
     * @private
     */
    CaptionController.prototype.captionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FwdGlvbi5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFpdC9haXQtY29yZS8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9sbGVycy9jYXB0aW9uLmNvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV4RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7SUFHaEQsaUJBQWlCLFNBQWpCLGlCQUFpQjs7OztJQUM1QixZQUE2QixjQUE4QjtRQUE5QixtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7SUFBRyxDQUFDOzs7OztJQUcvRCxXQUFXLENBQVMsSUFBSTtRQUN0QixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9DLENBQUM7Ozs7O0lBR0QsVUFBVSxDQUFTLElBQUk7UUFDckIsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QyxDQUFDO0NBQ0YsQ0FBQTtBQVJDO0lBREMsSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUNKLG1CQUFBLElBQUksRUFBRSxDQUFBOzs7O29EQUVsQjtBQUdEO0lBREMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUNKLG1CQUFBLElBQUksRUFBRSxDQUFBOzs7O21EQUVqQjtBQVhVLGlCQUFpQjtJQUQ3QixVQUFVLENBQUMsU0FBUyxDQUFDOzZDQUV5QixjQUFjO0dBRGhELGlCQUFpQixDQVk3QjtTQVpZLGlCQUFpQjs7Ozs7O0lBQ2hCLDJDQUErQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvZHksIENvbnRyb2xsZXIsIFBvc3QgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XHJcblxyXG5pbXBvcnQgeyBDYXB0aW9uU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2NhcHRpb24uc2VydmljZSc7XHJcblxyXG5AQ29udHJvbGxlcignY2FwdGlvbicpXHJcbmV4cG9ydCBjbGFzcyBDYXB0aW9uQ29udHJvbGxlciB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBjYXB0aW9uU2VydmljZTogQ2FwdGlvblNlcnZpY2UpIHt9XHJcblxyXG4gIEBQb3N0KCdnZXQvbWFueScpXHJcbiAgZ2V0Q2FwdGlvbnMoQEJvZHkoKSBib2R5KSB7XHJcbiAgICByZXR1cm4gdGhpcy5jYXB0aW9uU2VydmljZS5nZXRDYXB0aW9ucyhib2R5KTtcclxuICB9XHJcblxyXG4gIEBQb3N0KCdnZXQvb25lJylcclxuICBnZXRDYXB0aW9uKEBCb2R5KCkgYm9keSkge1xyXG4gICAgcmV0dXJuIHRoaXMuY2FwdGlvblNlcnZpY2UuZ2V0Q2FwdGlvbihib2R5KTtcclxuICB9XHJcbn1cclxuIl19