/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Body, Controller, Post } from '@nestjs/common';
import { CaptionService } from '../services/caption.service';
var CaptionController = /** @class */ (function () {
    function CaptionController(captionService) {
        this.captionService = captionService;
    }
    /**
     * @param {?} body
     * @return {?}
     */
    CaptionController.prototype.getCaptions = /**
     * @param {?} body
     * @return {?}
     */
    function (body) {
        return this.captionService.getCaptions(body);
    };
    /**
     * @param {?} body
     * @return {?}
     */
    CaptionController.prototype.getCaption = /**
     * @param {?} body
     * @return {?}
     */
    function (body) {
        return this.captionService.getCaption(body);
    };
    tslib_1.__decorate([
        Post('get/many'),
        tslib_1.__param(0, Body()),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [Object]),
        tslib_1.__metadata("design:returntype", void 0)
    ], CaptionController.prototype, "getCaptions", null);
    tslib_1.__decorate([
        Post('get/one'),
        tslib_1.__param(0, Body()),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [Object]),
        tslib_1.__metadata("design:returntype", void 0)
    ], CaptionController.prototype, "getCaption", null);
    CaptionController = tslib_1.__decorate([
        Controller('caption'),
        tslib_1.__metadata("design:paramtypes", [CaptionService])
    ], CaptionController);
    return CaptionController;
}());
export { CaptionController };
if (false) {
    /**
     * @type {?}
     * @private
     */
    CaptionController.prototype.captionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FwdGlvbi5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFpdC9haXQtY29yZS8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9sbGVycy9jYXB0aW9uLmNvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV4RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7O0lBSTNELDJCQUE2QixjQUE4QjtRQUE5QixtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7SUFBRyxDQUFDOzs7OztJQUcvRCx1Q0FBVzs7OztJQUFYLFVBQW9CLElBQUk7UUFDdEIsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQyxDQUFDOzs7OztJQUdELHNDQUFVOzs7O0lBQVYsVUFBbUIsSUFBSTtRQUNyQixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFQRDtRQURDLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDSixtQkFBQSxJQUFJLEVBQUUsQ0FBQTs7Ozt3REFFbEI7SUFHRDtRQURDLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDSixtQkFBQSxJQUFJLEVBQUUsQ0FBQTs7Ozt1REFFakI7SUFYVSxpQkFBaUI7UUFEN0IsVUFBVSxDQUFDLFNBQVMsQ0FBQztpREFFeUIsY0FBYztPQURoRCxpQkFBaUIsQ0FZN0I7SUFBRCx3QkFBQztDQUFBLElBQUE7U0FaWSxpQkFBaUI7Ozs7OztJQUNoQiwyQ0FBK0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb2R5LCBDb250cm9sbGVyLCBQb3N0IH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xyXG5cclxuaW1wb3J0IHsgQ2FwdGlvblNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9jYXB0aW9uLnNlcnZpY2UnO1xyXG5cclxuQENvbnRyb2xsZXIoJ2NhcHRpb24nKVxyXG5leHBvcnQgY2xhc3MgQ2FwdGlvbkNvbnRyb2xsZXIge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgY2FwdGlvblNlcnZpY2U6IENhcHRpb25TZXJ2aWNlKSB7fVxyXG5cclxuICBAUG9zdCgnZ2V0L21hbnknKVxyXG4gIGdldENhcHRpb25zKEBCb2R5KCkgYm9keSkge1xyXG4gICAgcmV0dXJuIHRoaXMuY2FwdGlvblNlcnZpY2UuZ2V0Q2FwdGlvbnMoYm9keSk7XHJcbiAgfVxyXG5cclxuICBAUG9zdCgnZ2V0L29uZScpXHJcbiAgZ2V0Q2FwdGlvbihAQm9keSgpIGJvZHkpIHtcclxuICAgIHJldHVybiB0aGlzLmNhcHRpb25TZXJ2aWNlLmdldENhcHRpb24oYm9keSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==