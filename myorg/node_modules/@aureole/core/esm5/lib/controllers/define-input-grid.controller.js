/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Body, Controller, Post } from '@nestjs/common';
import { DefineInputGridService } from '../services/define-input-grid.service';
var DefineInputGridController = /** @class */ (function () {
    function DefineInputGridController(defineInputGridService) {
        this.defineInputGridService = defineInputGridService;
    }
    /**
     * @param {?} body
     * @return {?}
     */
    DefineInputGridController.prototype.getDefineInputGrid = /**
     * @param {?} body
     * @return {?}
     */
    function (body) {
        return this.defineInputGridService.getDefineInputGrid(body);
    };
    tslib_1.__decorate([
        Post('get/many'),
        tslib_1.__param(0, Body()),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [Object]),
        tslib_1.__metadata("design:returntype", void 0)
    ], DefineInputGridController.prototype, "getDefineInputGrid", null);
    DefineInputGridController = tslib_1.__decorate([
        Controller('define-input-grid'),
        tslib_1.__metadata("design:paramtypes", [DefineInputGridService])
    ], DefineInputGridController);
    return DefineInputGridController;
}());
export { DefineInputGridController };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefineInputGridController.prototype.defineInputGridService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmaW5lLWlucHV0LWdyaWQuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhaXQvYWl0LWNvcmUvIiwic291cmNlcyI6WyJsaWIvY29udHJvbGxlcnMvZGVmaW5lLWlucHV0LWdyaWQuY29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXhELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDOztJQUk3RSxtQ0FDbUIsc0JBQThDO1FBQTlDLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBd0I7SUFDOUQsQ0FBQzs7Ozs7SUFHSixzREFBa0I7Ozs7SUFBbEIsVUFBMkIsSUFBSTtRQUM3QixPQUFPLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBRkQ7UUFEQyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ0csbUJBQUEsSUFBSSxFQUFFLENBQUE7Ozs7dUVBRXpCO0lBUlUseUJBQXlCO1FBRHJDLFVBQVUsQ0FBQyxtQkFBbUIsQ0FBQztpREFHYSxzQkFBc0I7T0FGdEQseUJBQXlCLENBU3JDO0lBQUQsZ0NBQUM7Q0FBQSxJQUFBO1NBVFkseUJBQXlCOzs7Ozs7SUFFbEMsMkRBQStEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm9keSwgQ29udHJvbGxlciwgUG9zdCB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcclxuXHJcbmltcG9ydCB7IERlZmluZUlucHV0R3JpZFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9kZWZpbmUtaW5wdXQtZ3JpZC5zZXJ2aWNlJztcclxuXHJcbkBDb250cm9sbGVyKCdkZWZpbmUtaW5wdXQtZ3JpZCcpXHJcbmV4cG9ydCBjbGFzcyBEZWZpbmVJbnB1dEdyaWRDb250cm9sbGVyIHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgZGVmaW5lSW5wdXRHcmlkU2VydmljZTogRGVmaW5lSW5wdXRHcmlkU2VydmljZVxyXG4gICkge31cclxuXHJcbiAgQFBvc3QoJ2dldC9tYW55JylcclxuICBnZXREZWZpbmVJbnB1dEdyaWQoQEJvZHkoKSBib2R5KSB7XHJcbiAgICByZXR1cm4gdGhpcy5kZWZpbmVJbnB1dEdyaWRTZXJ2aWNlLmdldERlZmluZUlucHV0R3JpZChib2R5KTtcclxuICB9XHJcbn1cclxuIl19