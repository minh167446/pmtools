/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { SysDefineMappingControl } from '../entities/sys_define_mapping_control.entity';
var DefineMappingControlService = /** @class */ (function () {
    function DefineMappingControlService(defineMappingControlRepository) {
        this.defineMappingControlRepository = defineMappingControlRepository;
    }
    /**
     * @param {?} context
     * @return {?}
     */
    DefineMappingControlService.prototype.getDefineMappingControls = /**
     * @param {?} context
     * @return {?}
     */
    function (context) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.defineMappingControlRepository.find({
                            company: context.company,
                            pid: context.pid
                        })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * @param {?} context
     * @return {?}
     */
    DefineMappingControlService.prototype.getDefineMappingControl = /**
     * @param {?} context
     * @return {?}
     */
    function (context) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.defineMappingControlRepository.find({
                            company: context.company,
                            pid: context.pid,
                            item_no: context.item_no
                        })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DefineMappingControlService = tslib_1.__decorate([
        Injectable(),
        tslib_1.__param(0, InjectRepository(SysDefineMappingControl)),
        tslib_1.__metadata("design:paramtypes", [Repository])
    ], DefineMappingControlService);
    return DefineMappingControlService;
}());
export { DefineMappingControlService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefineMappingControlService.prototype.defineMappingControlRepository;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmaW5lLW1hcHBpbmctY29udHJvbC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFpdC9haXQtY29yZS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9kZWZpbmUtbWFwcGluZy1jb250cm9sLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDbkQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUVyQyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQzs7SUFJdEYscUNBRW1CLDhCQUVoQjtRQUZnQixtQ0FBOEIsR0FBOUIsOEJBQThCLENBRTlDO0lBQ0EsQ0FBQzs7Ozs7SUFFRSw4REFBd0I7Ozs7SUFBOUIsVUFBK0IsT0FBWTs7Ozs0QkFDbEMscUJBQU0sSUFBSSxDQUFDLDhCQUE4QixDQUFDLElBQUksQ0FBQzs0QkFDcEQsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPOzRCQUN4QixHQUFHLEVBQUUsT0FBTyxDQUFDLEdBQUc7eUJBQ2pCLENBQUMsRUFBQTs0QkFIRixzQkFBTyxTQUdMLEVBQUM7Ozs7S0FDSjs7Ozs7SUFFSyw2REFBdUI7Ozs7SUFBN0IsVUFBOEIsT0FBWTs7Ozs0QkFDakMscUJBQU0sSUFBSSxDQUFDLDhCQUE4QixDQUFDLElBQUksQ0FBQzs0QkFDcEQsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPOzRCQUN4QixHQUFHLEVBQUUsT0FBTyxDQUFDLEdBQUc7NEJBQ2hCLE9BQU8sRUFBRSxPQUFPLENBQUMsT0FBTzt5QkFDekIsQ0FBQyxFQUFBOzRCQUpGLHNCQUFPLFNBSUwsRUFBQzs7OztLQUNKO0lBckJVLDJCQUEyQjtRQUR2QyxVQUFVLEVBQUU7UUFHUixtQkFBQSxnQkFBZ0IsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFBO2lEQUNPLFVBQVU7T0FIbEQsMkJBQTJCLENBc0J2QztJQUFELGtDQUFDO0NBQUEsSUFBQTtTQXRCWSwyQkFBMkI7Ozs7OztJQUVwQyxxRUFHQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XHJcbmltcG9ydCB7IEluamVjdFJlcG9zaXRvcnkgfSBmcm9tICdAbmVzdGpzL3R5cGVvcm0nO1xyXG5pbXBvcnQgeyBSZXBvc2l0b3J5IH0gZnJvbSAndHlwZW9ybSc7XHJcblxyXG5pbXBvcnQgeyBTeXNEZWZpbmVNYXBwaW5nQ29udHJvbCB9IGZyb20gJy4uL2VudGl0aWVzL3N5c19kZWZpbmVfbWFwcGluZ19jb250cm9sLmVudGl0eSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBEZWZpbmVNYXBwaW5nQ29udHJvbFNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgQEluamVjdFJlcG9zaXRvcnkoU3lzRGVmaW5lTWFwcGluZ0NvbnRyb2wpXHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGRlZmluZU1hcHBpbmdDb250cm9sUmVwb3NpdG9yeTogUmVwb3NpdG9yeTxcclxuICAgICAgU3lzRGVmaW5lTWFwcGluZ0NvbnRyb2xcclxuICAgID5cclxuICApIHt9XHJcblxyXG4gIGFzeW5jIGdldERlZmluZU1hcHBpbmdDb250cm9scyhjb250ZXh0OiBhbnkpIHtcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLmRlZmluZU1hcHBpbmdDb250cm9sUmVwb3NpdG9yeS5maW5kKHtcclxuICAgICAgY29tcGFueTogY29udGV4dC5jb21wYW55LFxyXG4gICAgICBwaWQ6IGNvbnRleHQucGlkXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGFzeW5jIGdldERlZmluZU1hcHBpbmdDb250cm9sKGNvbnRleHQ6IGFueSkge1xyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZGVmaW5lTWFwcGluZ0NvbnRyb2xSZXBvc2l0b3J5LmZpbmQoe1xyXG4gICAgICBjb21wYW55OiBjb250ZXh0LmNvbXBhbnksXHJcbiAgICAgIHBpZDogY29udGV4dC5waWQsXHJcbiAgICAgIGl0ZW1fbm86IGNvbnRleHQuaXRlbV9ub1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==