/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { SysDefineMappingFunction } from '../entities/sys_define_mapping_function.entity';
var DefineMappingFunctionService = /** @class */ (function () {
    function DefineMappingFunctionService(defineMappingFunctionRepository) {
        this.defineMappingFunctionRepository = defineMappingFunctionRepository;
    }
    /**
     * @param {?} context
     * @return {?}
     */
    DefineMappingFunctionService.prototype.getDefineMappingFunction = /**
     * @param {?} context
     * @return {?}
     */
    function (context) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.defineMappingFunctionRepository.find({
                            company: context.company,
                            pid: context.pid
                        })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DefineMappingFunctionService = tslib_1.__decorate([
        Injectable(),
        tslib_1.__param(0, InjectRepository(SysDefineMappingFunction)),
        tslib_1.__metadata("design:paramtypes", [Repository])
    ], DefineMappingFunctionService);
    return DefineMappingFunctionService;
}());
export { DefineMappingFunctionService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefineMappingFunctionService.prototype.defineMappingFunctionRepository;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmaW5lLW1hcHBpbmctZnVuY3Rpb24uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhaXQvYWl0LWNvcmUvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvZGVmaW5lLW1hcHBpbmctZnVuY3Rpb24uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRXJDLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGdEQUFnRCxDQUFDOztJQUl4RixzQ0FFbUIsK0JBRWhCO1FBRmdCLG9DQUErQixHQUEvQiwrQkFBK0IsQ0FFL0M7SUFDQSxDQUFDOzs7OztJQUVFLCtEQUF3Qjs7OztJQUE5QixVQUErQixPQUFZOzs7OzRCQUNsQyxxQkFBTSxJQUFJLENBQUMsK0JBQStCLENBQUMsSUFBSSxDQUFDOzRCQUNyRCxPQUFPLEVBQUUsT0FBTyxDQUFDLE9BQU87NEJBQ3hCLEdBQUcsRUFBRSxPQUFPLENBQUMsR0FBRzt5QkFDakIsQ0FBQyxFQUFBOzRCQUhGLHNCQUFPLFNBR0wsRUFBQzs7OztLQUNKO0lBYlUsNEJBQTRCO1FBRHhDLFVBQVUsRUFBRTtRQUdSLG1CQUFBLGdCQUFnQixDQUFDLHdCQUF3QixDQUFDLENBQUE7aURBQ08sVUFBVTtPQUhuRCw0QkFBNEIsQ0FjeEM7SUFBRCxtQ0FBQztDQUFBLElBQUE7U0FkWSw0QkFBNEI7Ozs7OztJQUVyQyx1RUFHQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XHJcbmltcG9ydCB7IEluamVjdFJlcG9zaXRvcnkgfSBmcm9tICdAbmVzdGpzL3R5cGVvcm0nO1xyXG5pbXBvcnQgeyBSZXBvc2l0b3J5IH0gZnJvbSAndHlwZW9ybSc7XHJcblxyXG5pbXBvcnQgeyBTeXNEZWZpbmVNYXBwaW5nRnVuY3Rpb24gfSBmcm9tICcuLi9lbnRpdGllcy9zeXNfZGVmaW5lX21hcHBpbmdfZnVuY3Rpb24uZW50aXR5JztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIERlZmluZU1hcHBpbmdGdW5jdGlvblNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgQEluamVjdFJlcG9zaXRvcnkoU3lzRGVmaW5lTWFwcGluZ0Z1bmN0aW9uKVxyXG4gICAgcHJpdmF0ZSByZWFkb25seSBkZWZpbmVNYXBwaW5nRnVuY3Rpb25SZXBvc2l0b3J5OiBSZXBvc2l0b3J5PFxyXG4gICAgICBTeXNEZWZpbmVNYXBwaW5nRnVuY3Rpb25cclxuICAgID5cclxuICApIHt9XHJcblxyXG4gIGFzeW5jIGdldERlZmluZU1hcHBpbmdGdW5jdGlvbihjb250ZXh0OiBhbnkpIHtcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLmRlZmluZU1hcHBpbmdGdW5jdGlvblJlcG9zaXRvcnkuZmluZCh7XHJcbiAgICAgIGNvbXBhbnk6IGNvbnRleHQuY29tcGFueSxcclxuICAgICAgcGlkOiBjb250ZXh0LnBpZFxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==