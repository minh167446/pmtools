/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { SysDefineInputGrid } from '../entities/sys_define_input_grid.entity';
var DefineInputGridService = /** @class */ (function () {
    function DefineInputGridService(defineInputGridRepository) {
        this.defineInputGridRepository = defineInputGridRepository;
    }
    /**
     * @param {?} context
     * @return {?}
     */
    DefineInputGridService.prototype.getDefineInputGrid = /**
     * @param {?} context
     * @return {?}
     */
    function (context) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.defineInputGridRepository.find({
                            company: context.company,
                            pid: context.pid,
                            input_grid_id: context.input_grid_id
                        })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DefineInputGridService = tslib_1.__decorate([
        Injectable(),
        tslib_1.__param(0, InjectRepository(SysDefineInputGrid)),
        tslib_1.__metadata("design:paramtypes", [Repository])
    ], DefineInputGridService);
    return DefineInputGridService;
}());
export { DefineInputGridService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefineInputGridService.prototype.defineInputGridRepository;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmaW5lLWlucHV0LWdyaWQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhaXQvYWl0LWNvcmUvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvZGVmaW5lLWlucHV0LWdyaWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRXJDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDOztJQUk1RSxnQ0FFbUIseUJBQXlEO1FBQXpELDhCQUF5QixHQUF6Qix5QkFBeUIsQ0FBZ0M7SUFDekUsQ0FBQzs7Ozs7SUFFRSxtREFBa0I7Ozs7SUFBeEIsVUFBeUIsT0FBWTs7Ozs0QkFDNUIscUJBQU0sSUFBSSxDQUFDLHlCQUF5QixDQUFDLElBQUksQ0FBQzs0QkFDL0MsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPOzRCQUN4QixHQUFHLEVBQUUsT0FBTyxDQUFDLEdBQUc7NEJBQ2hCLGFBQWEsRUFBRSxPQUFPLENBQUMsYUFBYTt5QkFDckMsQ0FBQyxFQUFBOzRCQUpGLHNCQUFPLFNBSUwsRUFBQzs7OztLQUNKO0lBWlUsc0JBQXNCO1FBRGxDLFVBQVUsRUFBRTtRQUdSLG1CQUFBLGdCQUFnQixDQUFDLGtCQUFrQixDQUFDLENBQUE7aURBQ08sVUFBVTtPQUg3QyxzQkFBc0IsQ0FhbEM7SUFBRCw2QkFBQztDQUFBLElBQUE7U0FiWSxzQkFBc0I7Ozs7OztJQUUvQiwyREFDMEUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xyXG5pbXBvcnQgeyBJbmplY3RSZXBvc2l0b3J5IH0gZnJvbSAnQG5lc3Rqcy90eXBlb3JtJztcclxuaW1wb3J0IHsgUmVwb3NpdG9yeSB9IGZyb20gJ3R5cGVvcm0nO1xyXG5cclxuaW1wb3J0IHsgU3lzRGVmaW5lSW5wdXRHcmlkIH0gZnJvbSAnLi4vZW50aXRpZXMvc3lzX2RlZmluZV9pbnB1dF9ncmlkLmVudGl0eSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBEZWZpbmVJbnB1dEdyaWRTZXJ2aWNlIHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIEBJbmplY3RSZXBvc2l0b3J5KFN5c0RlZmluZUlucHV0R3JpZClcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgZGVmaW5lSW5wdXRHcmlkUmVwb3NpdG9yeTogUmVwb3NpdG9yeTxTeXNEZWZpbmVJbnB1dEdyaWQ+XHJcbiAgKSB7fVxyXG5cclxuICBhc3luYyBnZXREZWZpbmVJbnB1dEdyaWQoY29udGV4dDogYW55KSB7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5kZWZpbmVJbnB1dEdyaWRSZXBvc2l0b3J5LmZpbmQoe1xyXG4gICAgICBjb21wYW55OiBjb250ZXh0LmNvbXBhbnksXHJcbiAgICAgIHBpZDogY29udGV4dC5waWQsXHJcbiAgICAgIGlucHV0X2dyaWRfaWQ6IGNvbnRleHQuaW5wdXRfZ3JpZF9pZFxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==