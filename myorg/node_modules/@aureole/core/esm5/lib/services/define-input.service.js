/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { SysDefineInput } from '../entities/sys_define_input.entity';
var DefineInputService = /** @class */ (function () {
    function DefineInputService(defineInputRepository) {
        this.defineInputRepository = defineInputRepository;
    }
    /**
     * @param {?} context
     * @return {?}
     */
    DefineInputService.prototype.getDefineInput = /**
     * @param {?} context
     * @return {?}
     */
    function (context) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.defineInputRepository.find({
                            company: context.company,
                            pid: context.pid,
                            input_id: context.input_id
                        })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DefineInputService = tslib_1.__decorate([
        Injectable(),
        tslib_1.__param(0, InjectRepository(SysDefineInput)),
        tslib_1.__metadata("design:paramtypes", [Repository])
    ], DefineInputService);
    return DefineInputService;
}());
export { DefineInputService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefineInputService.prototype.defineInputRepository;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmaW5lLWlucHV0LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWl0L2FpdC1jb3JlLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL2RlZmluZS1pbnB1dC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzVDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFckMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFDQUFxQyxDQUFDOztJQUluRSw0QkFFbUIscUJBQWlEO1FBQWpELDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBNEI7SUFDakUsQ0FBQzs7Ozs7SUFFRSwyQ0FBYzs7OztJQUFwQixVQUFxQixPQUFZOzs7OzRCQUN4QixxQkFBTSxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDOzRCQUMzQyxPQUFPLEVBQUUsT0FBTyxDQUFDLE9BQU87NEJBQ3hCLEdBQUcsRUFBRSxPQUFPLENBQUMsR0FBRzs0QkFDaEIsUUFBUSxFQUFFLE9BQU8sQ0FBQyxRQUFRO3lCQUMzQixDQUFDLEVBQUE7NEJBSkYsc0JBQU8sU0FJTCxFQUFDOzs7O0tBQ0o7SUFaVSxrQkFBa0I7UUFEOUIsVUFBVSxFQUFFO1FBR1IsbUJBQUEsZ0JBQWdCLENBQUMsY0FBYyxDQUFDLENBQUE7aURBQ08sVUFBVTtPQUh6QyxrQkFBa0IsQ0FhOUI7SUFBRCx5QkFBQztDQUFBLElBQUE7U0FiWSxrQkFBa0I7Ozs7OztJQUUzQixtREFDa0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xyXG5pbXBvcnQgeyBJbmplY3RSZXBvc2l0b3J5IH0gZnJvbSAnQG5lc3Rqcy90eXBlb3JtJztcclxuaW1wb3J0IHsgUmVwb3NpdG9yeSB9IGZyb20gJ3R5cGVvcm0nO1xyXG5cclxuaW1wb3J0IHsgU3lzRGVmaW5lSW5wdXQgfSBmcm9tICcuLi9lbnRpdGllcy9zeXNfZGVmaW5lX2lucHV0LmVudGl0eSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBEZWZpbmVJbnB1dFNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgQEluamVjdFJlcG9zaXRvcnkoU3lzRGVmaW5lSW5wdXQpXHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGRlZmluZUlucHV0UmVwb3NpdG9yeTogUmVwb3NpdG9yeTxTeXNEZWZpbmVJbnB1dD5cclxuICApIHt9XHJcblxyXG4gIGFzeW5jIGdldERlZmluZUlucHV0KGNvbnRleHQ6IGFueSkge1xyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZGVmaW5lSW5wdXRSZXBvc2l0b3J5LmZpbmQoe1xyXG4gICAgICBjb21wYW55OiBjb250ZXh0LmNvbXBhbnksXHJcbiAgICAgIHBpZDogY29udGV4dC5waWQsXHJcbiAgICAgIGlucHV0X2lkOiBjb250ZXh0LmlucHV0X2lkXHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIl19