/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { SysEmployee } from '../entities/sys_employee.entity';
var EmployeeService = /** @class */ (function () {
    function EmployeeService(employeeRepository) {
        this.employeeRepository = employeeRepository;
    }
    /**
     * @param {?} context
     * @return {?}
     */
    EmployeeService.prototype.getEmployees = /**
     * @param {?} context
     * @return {?}
     */
    function (context) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var params, list, result, index, index, index, index, index, index, index, index, index, index;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        params = new Object();
                        list = [];
                        if (context.name !== undefined) {
                            params['name'] = context.name;
                        }
                        if (context.activeFlag !== undefined) {
                            params['active_flag'] = context.activeFlag;
                        }
                        if (context.address1 !== undefined) {
                            params['address1'] = context.address1;
                        }
                        if (context.address2 !== undefined) {
                            params['address2'] = context.address2;
                        }
                        if (context.tel1 !== undefined) {
                            params['tel1'] = context.tel1;
                        }
                        if (context.tel2 !== undefined) {
                            params['tel2'] = context.tel2;
                        }
                        if (context.email !== undefined) {
                            params['email'] = context.email;
                        }
                        if (context.sortNo !== undefined) {
                            params['sort_no'] = context.sortNo;
                        }
                        if (context.changeCount !== undefined) {
                            params['change_count'] = context.changeCount;
                        }
                        if (context.dataFlag !== undefined) {
                            params['data_flag'] = context.dataFlag;
                        }
                        return [4 /*yield*/, this.employeeRepository.find(tslib_1.__assign({ company: context.company, lang: context.lang }, params))];
                    case 1:
                        result = _a.sent();
                        list = tslib_1.__spread(result);
                        // NOTE Emp code
                        if (context.codeFrom !== undefined) {
                            index = list.findIndex((/**
                             * @param {?} element
                             * @return {?}
                             */
                            function (element) {
                                return element.code === context.codeFrom;
                            }));
                            if (index >= 0) {
                                list = list.slice(index);
                            }
                        }
                        if (context.codeTo !== undefined) {
                            index = list.findIndex((/**
                             * @param {?} element
                             * @return {?}
                             */
                            function (element) {
                                return element.code === context.codeTo;
                            }));
                            if (index >= 0) {
                                list = list.slice(0, index + 1);
                            }
                        }
                        // NOTE create_emp_id
                        if (context.createEmpFrom !== undefined) {
                            index = list.findIndex((/**
                             * @param {?} element
                             * @return {?}
                             */
                            function (element) {
                                return element.create_emp_id === context.createEmpFrom;
                            }));
                            if (index >= 0) {
                                list = list.slice(0, index + 1);
                            }
                        }
                        if (context.createEmpTo !== undefined) {
                            index = list.findIndex((/**
                             * @param {?} element
                             * @return {?}
                             */
                            function (element) {
                                return element.create_emp_id === context.createEmpTo;
                            }));
                            if (index >= 0) {
                                list = list.slice(0, index + 1);
                            }
                        }
                        // NOTE create_datetime
                        if (context.createDatetimeFrom !== undefined) {
                            index = list.findIndex((/**
                             * @param {?} element
                             * @return {?}
                             */
                            function (element) {
                                return element.create_datetime === new Date(context.createDatetimeFrom);
                            }));
                            if (index >= 0) {
                                list = list.slice(0, index + 1);
                            }
                        }
                        if (context.createDatetimeTo !== undefined) {
                            index = list.findIndex((/**
                             * @param {?} element
                             * @return {?}
                             */
                            function (element) {
                                return element.create_datetime === context.createDatetimeTo;
                            }));
                            if (index >= 0) {
                                list = list.slice(0, index + 1);
                            }
                        }
                        // NOTE change_emp_id
                        if (context.changeEmpFrom !== undefined) {
                            index = list.findIndex((/**
                             * @param {?} element
                             * @return {?}
                             */
                            function (element) {
                                return element.change_emp_id === context.changeEmpFrom;
                            }));
                            if (index >= 0) {
                                list = list.slice(0, index + 1);
                            }
                        }
                        if (context.changeEmpTo !== undefined) {
                            index = list.findIndex((/**
                             * @param {?} element
                             * @return {?}
                             */
                            function (element) {
                                return element.change_emp_id === context.changeEmpTo;
                            }));
                            if (index >= 0) {
                                list = list.slice(0, index + 1);
                            }
                        }
                        // NOTE change_datetime
                        if (context.changeDatetimeFrom !== undefined) {
                            index = list.findIndex((/**
                             * @param {?} element
                             * @return {?}
                             */
                            function (element) {
                                return element.change_datetime === context.changeDatetimeFrom;
                            }));
                            if (index >= 0) {
                                list = list.slice(0, index + 1);
                            }
                        }
                        if (context.changeDatetimeTo !== undefined) {
                            index = list.findIndex((/**
                             * @param {?} element
                             * @return {?}
                             */
                            function (element) {
                                return element.change_datetime === context.changeDatetimeTo;
                            }));
                            if (index >= 0) {
                                list = list.slice(0, index + 1);
                            }
                        }
                        return [2 /*return*/, list];
                }
            });
        });
    };
    /**
     * @param {?} context
     * @return {?}
     */
    EmployeeService.prototype.getEmployee = /**
     * @param {?} context
     * @return {?}
     */
    function (context) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.employeeRepository.find({
                            company: context.company,
                            lang: context.lang,
                            code: context.code
                        })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * @param {?} context
     * @return {?}
     */
    EmployeeService.prototype.addEmployee = /**
     * @param {?} context
     * @return {?}
     */
    function (context) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var result, contextVi, contextEn, contextJa;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(context.code !== '')) return [3 /*break*/, 6];
                        return [4 /*yield*/, this.employeeRepository.find({
                                company: context.company,
                                code: context.code
                            })];
                    case 1:
                        result = _a.sent();
                        if (!(result.length <= 0)) return [3 /*break*/, 5];
                        contextVi = tslib_1.__assign({}, context);
                        contextVi.lang = 'vi-VN';
                        contextEn = tslib_1.__assign({}, context);
                        contextEn.lang = 'en-US';
                        contextJa = tslib_1.__assign({}, context);
                        contextJa.lang = 'ja-JP';
                        return [4 /*yield*/, this.employeeRepository.save(contextVi)];
                    case 2:
                        _a.sent();
                        return [4 /*yield*/, this.employeeRepository.save(contextEn)];
                    case 3:
                        _a.sent();
                        return [4 /*yield*/, this.employeeRepository.save(contextJa)];
                    case 4:
                        _a.sent();
                        return [2 /*return*/, true];
                    case 5: return [2 /*return*/, false];
                    case 6: return [2 /*return*/, false];
                }
            });
        });
    };
    /**
     * @param {?} context
     * @return {?}
     */
    EmployeeService.prototype.updateEmployee = /**
     * @param {?} context
     * @return {?}
     */
    function (context) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var result, contextVi, contextEn, contextJa;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(context.code !== '')) return [3 /*break*/, 6];
                        return [4 /*yield*/, this.employeeRepository.find({
                                company: context.company,
                                code: context.code
                            })];
                    case 1:
                        result = _a.sent();
                        if (!(result.length > 0)) return [3 /*break*/, 5];
                        context.change_count++;
                        context.change_datetime = null;
                        contextVi = tslib_1.__assign({}, context);
                        contextVi.lang = 'vi-VN';
                        contextEn = tslib_1.__assign({}, context);
                        contextEn.lang = 'en-US';
                        contextJa = tslib_1.__assign({}, context);
                        contextJa.lang = 'ja-JP';
                        return [4 /*yield*/, this.employeeRepository.update([contextVi.company, contextVi.lang, contextVi.code], contextVi)];
                    case 2:
                        _a.sent();
                        return [4 /*yield*/, this.employeeRepository.update([contextEn.company, contextEn.lang, contextEn.code], contextEn)];
                    case 3:
                        _a.sent();
                        return [4 /*yield*/, this.employeeRepository.update([contextJa.company, contextJa.lang, contextJa.code], contextJa)];
                    case 4:
                        _a.sent();
                        return [2 /*return*/, true];
                    case 5: return [2 /*return*/, false];
                    case 6: return [2 /*return*/, false];
                }
            });
        });
    };
    /**
     * @param {?} context
     * @return {?}
     */
    EmployeeService.prototype.deleteEmployee = /**
     * @param {?} context
     * @return {?}
     */
    function (context) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var result;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.employeeRepository.delete({ code: context })];
                    case 1:
                        result = _a.sent();
                        if (result.affected > 0) {
                            return [2 /*return*/, true];
                        }
                        return [2 /*return*/, false];
                }
            });
        });
    };
    /**
     * @param {?} context
     * @return {?}
     */
    EmployeeService.prototype.deleteEmployees = /**
     * @param {?} context
     * @return {?}
     */
    function (context) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var result;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.employeeRepository.delete(context)];
                    case 1:
                        result = _a.sent();
                        if (result.affected > 0) {
                            return [2 /*return*/, true];
                        }
                        return [2 /*return*/, false];
                }
            });
        });
    };
    EmployeeService = tslib_1.__decorate([
        Injectable(),
        tslib_1.__param(0, InjectRepository(SysEmployee)),
        tslib_1.__metadata("design:paramtypes", [Repository])
    ], EmployeeService);
    return EmployeeService;
}());
export { EmployeeService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    EmployeeService.prototype.employeeRepository;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1wbG95ZWUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhaXQvYWl0LWNvcmUvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvZW1wbG95ZWUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRXJDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQzs7SUFJNUQseUJBRW1CLGtCQUEyQztRQUEzQyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQXlCO0lBQzNELENBQUM7Ozs7O0lBRUUsc0NBQVk7Ozs7SUFBbEIsVUFBbUIsT0FBWTs7Ozs7O3dCQUN6QixNQUFNLEdBQUcsSUFBSSxNQUFNLEVBQUU7d0JBQ3JCLElBQUksR0FBRyxFQUFFO3dCQUViLElBQUksT0FBTyxDQUFDLElBQUksS0FBSyxTQUFTLEVBQUU7NEJBQzlCLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO3lCQUMvQjt3QkFFRCxJQUFJLE9BQU8sQ0FBQyxVQUFVLEtBQUssU0FBUyxFQUFFOzRCQUNwQyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQzt5QkFDNUM7d0JBRUQsSUFBSSxPQUFPLENBQUMsUUFBUSxLQUFLLFNBQVMsRUFBRTs0QkFDbEMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7eUJBQ3ZDO3dCQUVELElBQUksT0FBTyxDQUFDLFFBQVEsS0FBSyxTQUFTLEVBQUU7NEJBQ2xDLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDO3lCQUN2Qzt3QkFFRCxJQUFJLE9BQU8sQ0FB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UDNCO0lBQUQsc0JBQUM7Q0FBQSxJQUFBO1NBL1BZLGVBQWU7Ozs7OztJQUV4Qiw2Q0FDNEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xyXG5pbXBvcnQgeyBJbmplY3RSZXBvc2l0b3J5IH0gZnJvbSAnQG5lc3Rqcy90eXBlb3JtJztcclxuaW1wb3J0IHsgUmVwb3NpdG9yeSB9IGZyb20gJ3R5cGVvcm0nO1xyXG5cclxuaW1wb3J0IHsgU3lzRW1wbG95ZWUgfSBmcm9tICcuLi9lbnRpdGllcy9zeXNfZW1wbG95ZWUuZW50aXR5JztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEVtcGxveWVlU2VydmljZSB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBASW5qZWN0UmVwb3NpdG9yeShTeXNFbXBsb3llZSlcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgZW1wbG95ZWVSZXBvc2l0b3J5OiBSZXBvc2l0b3J5PFN5c0VtcGxveWVlPlxyXG4gICkge31cclxuXHJcbiAgYXN5bmMgZ2V0RW1wbG95ZWVzKGNvbnRleHQ6IGFueSkge1xyXG4gICAgbGV0IHBhcmFtcyA9IG5ldyBPYmplY3QoKTtcclxuICAgIGxldCBsaXN0ID0gW107XHJcblxyXG4gICAgaWYgKGNvbnRleHQubmFtZSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIHBhcmFtc1snbmFtZSddID0gY29udGV4dC5uYW1lO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChjb250ZXh0LmFjdGl2ZUZsYWcgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICBwYXJhbXNbJ2FjdGl2ZV9mbGFnJ10gPSBjb250ZXh0LmFjdGl2ZUZsYWc7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGNvbnRleHQuYWRkcmVzczEgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICBwYXJhbXNbJ2FkZHJlc3MxJ10gPSBjb250ZXh0LmFkZHJlc3MxO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChjb250ZXh0LmFkZHJlc3MyICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgcGFyYW1zWydhZGRyZXNzMiddID0gY29udGV4dC5hZGRyZXNzMjtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoY29udGV4dC50ZWwxICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgcGFyYW1zWyd0ZWwxJ10gPSBjb250ZXh0LnRlbDE7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGNvbnRleHQudGVsMiAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIHBhcmFtc1sndGVsMiddID0gY29udGV4dC50ZWwyO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChjb250ZXh0LmVtYWlsICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgcGFyYW1zWydlbWFpbCddID0gY29udGV4dC5lbWFpbDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoY29udGV4dC5zb3J0Tm8gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICBwYXJhbXNbJ3NvcnRfbm8nXSA9IGNvbnRleHQuc29ydE5vO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChjb250ZXh0LmNoYW5nZUNvdW50ICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgcGFyYW1zWydjaGFuZ2VfY291bnQnXSA9IGNvbnRleHQuY2hhbmdlQ291bnQ7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGNvbnRleHQuZGF0YUZsYWcgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICBwYXJhbXNbJ2RhdGFfZmxhZyddID0gY29udGV4dC5kYXRhRmxhZztcclxuICAgIH1cclxuXHJcbiAgICBsZXQgcmVzdWx0ID0gYXdhaXQgdGhpcy5lbXBsb3llZVJlcG9zaXRvcnkuZmluZCh7XHJcbiAgICAgIGNvbXBhbnk6IGNvbnRleHQuY29tcGFueSxcclxuICAgICAgbGFuZzogY29udGV4dC5sYW5nLFxyXG4gICAgICAuLi5wYXJhbXNcclxuICAgIH0pO1xyXG5cclxuICAgIGxpc3QgPSBbLi4ucmVzdWx0XTtcclxuXHJcbiAgICAvLyBOT1RFIEVtcCBjb2RlXHJcbiAgICBpZiAoY29udGV4dC5jb2RlRnJvbSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIGxldCBpbmRleCA9IGxpc3QuZmluZEluZGV4KChlbGVtZW50OiBhbnkpID0+IHtcclxuICAgICAgICByZXR1cm4gZWxlbWVudC5jb2RlID09PSBjb250ZXh0LmNvZGVGcm9tO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGlmIChpbmRleCA+PSAwKSB7XHJcbiAgICAgICAgbGlzdCA9IGxpc3Quc2xpY2UoaW5kZXgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGNvbnRleHQuY29kZVRvICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgbGV0IGluZGV4ID0gbGlzdC5maW5kSW5kZXgoKGVsZW1lbnQ6IGFueSkgPT4ge1xyXG4gICAgICAgIHJldHVybiBlbGVtZW50LmNvZGUgPT09IGNvbnRleHQuY29kZVRvO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGlmIChpbmRleCA+PSAwKSB7XHJcbiAgICAgICAgbGlzdCA9IGxpc3Quc2xpY2UoMCxpbmRleCsxKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIE5PVEUgY3JlYXRlX2VtcF9pZFxyXG4gICAgaWYgKGNvbnRleHQuY3JlYXRlRW1wRnJvbSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIGxldCBpbmRleCA9IGxpc3QuZmluZEluZGV4KChlbGVtZW50OiBhbnkpID0+IHtcclxuICAgICAgICByZXR1cm4gZWxlbWVudC5jcmVhdGVfZW1wX2lkID09PSBjb250ZXh0LmNyZWF0ZUVtcEZyb207XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgaWYgKGluZGV4ID49IDApIHtcclxuICAgICAgICBsaXN0ID0gbGlzdC5zbGljZSgwLGluZGV4KzEpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGNvbnRleHQuY3JlYXRlRW1wVG8gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICBsZXQgaW5kZXggPSBsaXN0LmZpbmRJbmRleCgoZWxlbWVudDogYW55KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQuY3JlYXRlX2VtcF9pZCA9PT0gY29udGV4dC5jcmVhdGVFbXBUbztcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAoaW5kZXggPj0gMCkge1xyXG4gICAgICAgIGxpc3QgPSBsaXN0LnNsaWNlKDAsaW5kZXgrMSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBOT1RFIGNyZWF0ZV9kYXRldGltZVxyXG4gICAgaWYgKGNvbnRleHQuY3JlYXRlRGF0ZXRpbWVGcm9tICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgbGV0IGluZGV4ID0gbGlzdC5maW5kSW5kZXgoKGVsZW1lbnQ6IGFueSkgPT4ge1xyXG4gICAgICAgIHJldHVybiBlbGVtZW50LmNyZWF0ZV9kYXRldGltZSA9PT0gbmV3IERhdGUoY29udGV4dC5jcmVhdGVEYXRldGltZUZyb20pO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGlmIChpbmRleCA+PSAwKSB7XHJcbiAgICAgICAgbGlzdCA9IGxpc3Quc2xpY2UoMCxpbmRleCsxKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChjb250ZXh0LmNyZWF0ZURhdGV0aW1lVG8gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICBsZXQgaW5kZXggPSBsaXN0LmZpbmRJbmRleCgoZWxlbWVudDogYW55KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQuY3JlYXRlX2RhdGV0aW1lID09PSBjb250ZXh0LmNyZWF0ZURhdGV0aW1lVG87XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgaWYgKGluZGV4ID49IDApIHtcclxuICAgICAgICBsaXN0ID0gbGlzdC5zbGljZSgwLGluZGV4KzEpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gTk9URSBjaGFuZ2VfZW1wX2lkXHJcbiAgICBpZiAoY29udGV4dC5jaGFuZ2VFbXBGcm9tICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgbGV0IGluZGV4ID0gbGlzdC5maW5kSW5kZXgoKGVsZW1lbnQ6IGFueSkgPT4ge1xyXG4gICAgICAgIHJldHVybiBlbGVtZW50LmNoYW5nZV9lbXBfaWQgPT09IGNvbnRleHQuY2hhbmdlRW1wRnJvbTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAoaW5kZXggPj0gMCkge1xyXG4gICAgICAgIGxpc3QgPSBsaXN0LnNsaWNlKDAsaW5kZXgrMSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZiAoY29udGV4dC5jaGFuZ2VFbXBUbyAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIGxldCBpbmRleCA9IGxpc3QuZmluZEluZGV4KChlbGVtZW50OiBhbnkpID0+IHtcclxuICAgICAgICByZXR1cm4gZWxlbWVudC5jaGFuZ2VfZW1wX2lkID09PSBjb250ZXh0LmNoYW5nZUVtcFRvO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGlmIChpbmRleCA+PSAwKSB7XHJcbiAgICAgICAgbGlzdCA9IGxpc3Quc2xpY2UoMCxpbmRleCsxKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIE5PVEUgY2hhbmdlX2RhdGV0aW1lXHJcbiAgICBpZiAoY29udGV4dC5jaGFuZ2VEYXRldGltZUZyb20gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICBsZXQgaW5kZXggPSBsaXN0LmZpbmRJbmRleCgoZWxlbWVudDogYW55KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQuY2hhbmdlX2RhdGV0aW1lID09PSBjb250ZXh0LmNoYW5nZURhdGV0aW1lRnJvbTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAoaW5kZXggPj0gMCkge1xyXG4gICAgICAgIGxpc3QgPSBsaXN0LnNsaWNlKDAsaW5kZXgrMSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZiAoY29udGV4dC5jaGFuZ2VEYXRldGltZVRvICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgbGV0IGluZGV4ID0gbGlzdC5maW5kSW5kZXgoKGVsZW1lbnQ6IGFueSkgPT4ge1xyXG4gICAgICAgIHJldHVybiBlbGVtZW50LmNoYW5nZV9kYXRldGltZSA9PT0gY29udGV4dC5jaGFuZ2VEYXRldGltZVRvO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGlmIChpbmRleCA+PSAwKSB7XHJcbiAgICAgICAgbGlzdCA9IGxpc3Quc2xpY2UoMCxpbmRleCsxKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBsaXN0O1xyXG4gIH1cclxuXHJcbiAgYXN5bmMgZ2V0RW1wbG95ZWUoY29udGV4dDogYW55KSB7XHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5lbXBsb3llZVJlcG9zaXRvcnkuZmluZCh7XHJcbiAgICAgIGNvbXBhbnk6IGNvbnRleHQuY29tcGFueSxcclxuICAgICAgbGFuZzogY29udGV4dC5sYW5nLFxyXG4gICAgICBjb2RlOiBjb250ZXh0LmNvZGVcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYXN5bmMgYWRkRW1wbG95ZWUoY29udGV4dDogYW55KSB7XHJcbiAgICBpZiAoY29udGV4dC5jb2RlICE9PSAnJykge1xyXG4gICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgdGhpcy5lbXBsb3llZVJlcG9zaXRvcnkuZmluZCh7XHJcbiAgICAgICAgY29tcGFueTogY29udGV4dC5jb21wYW55LFxyXG4gICAgICAgIGNvZGU6IGNvbnRleHQuY29kZVxyXG4gICAgICB9KTtcclxuICAgICAgaWYgKHJlc3VsdC5sZW5ndGggPD0gMCkge1xyXG4gICAgICAgIGxldCBjb250ZXh0VmkgPSB7IC4uLmNvbnRleHQgfTtcclxuICAgICAgICBjb250ZXh0VmkubGFuZyA9ICd2aS1WTic7XHJcblxyXG4gICAgICAgIGxldCBjb250ZXh0RW4gPSB7IC4uLmNvbnRleHQgfTtcclxuICAgICAgICBjb250ZXh0RW4ubGFuZyA9ICdlbi1VUyc7XHJcblxyXG4gICAgICAgIGxldCBjb250ZXh0SmEgPSB7IC4uLmNvbnRleHQgfTtcclxuICAgICAgICBjb250ZXh0SmEubGFuZyA9ICdqYS1KUCc7XHJcblxyXG4gICAgICAgIGF3YWl0IHRoaXMuZW1wbG95ZWVSZXBvc2l0b3J5LnNhdmUoY29udGV4dFZpKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmVtcGxveWVlUmVwb3NpdG9yeS5zYXZlKGNvbnRleHRFbik7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5lbXBsb3llZVJlcG9zaXRvcnkuc2F2ZShjb250ZXh0SmEpO1xyXG5cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBhc3luYyB1cGRhdGVFbXBsb3llZShjb250ZXh0OiBhbnkpIHtcclxuICAgIGlmIChjb250ZXh0LmNvZGUgIT09ICcnKSB7XHJcbiAgICAgIGxldCByZXN1bHQgPSBhd2FpdCB0aGlzLmVtcGxveWVlUmVwb3NpdG9yeS5maW5kKHtcclxuICAgICAgICBjb21wYW55OiBjb250ZXh0LmNvbXBhbnksXHJcbiAgICAgICAgY29kZTogY29udGV4dC5jb2RlXHJcbiAgICAgIH0pO1xyXG4gICAgICBpZiAocmVzdWx0Lmxlbmd0aCA+IDApIHtcclxuICAgICAgICBjb250ZXh0LmNoYW5nZV9jb3VudCsrO1xyXG4gICAgICAgIGNvbnRleHQuY2hhbmdlX2RhdGV0aW1lID0gbnVsbDtcclxuXHJcbiAgICAgICAgbGV0IGNvbnRleHRWaSA9IHsgLi4uY29udGV4dCB9O1xyXG4gICAgICAgIGNvbnRleHRWaS5sYW5nID0gJ3ZpLVZOJztcclxuXHJcbiAgICAgICAgbGV0IGNvbnRleHRFbiA9IHsgLi4uY29udGV4dCB9O1xyXG4gICAgICAgIGNvbnRleHRFbi5sYW5nID0gJ2VuLVVTJztcclxuXHJcbiAgICAgICAgbGV0IGNvbnRleHRKYSA9IHsgLi4uY29udGV4dCB9O1xyXG4gICAgICAgIGNvbnRleHRKYS5sYW5nID0gJ2phLUpQJztcclxuXHJcbiAgICAgICAgYXdhaXQgdGhpcy5lbXBsb3llZVJlcG9zaXRvcnkudXBkYXRlKFxyXG4gICAgICAgICAgW2NvbnRleHRWaS5jb21wYW55LCBjb250ZXh0VmkubGFuZywgY29udGV4dFZpLmNvZGVdLFxyXG4gICAgICAgICAgY29udGV4dFZpXHJcbiAgICAgICAgKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmVtcGxveWVlUmVwb3NpdG9yeS51cGRhdGUoXHJcbiAgICAgICAgICBbY29udGV4dEVuLmNvbXBhbnksIGNvbnRleHRFbi5sYW5nLCBjb250ZXh0RW4uY29kZV0sXHJcbiAgICAgICAgICBjb250ZXh0RW5cclxuICAgICAgICApO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZW1wbG95ZWVSZXBvc2l0b3J5LnVwZGF0ZShcclxuICAgICAgICAgIFtjb250ZXh0SmEuY29tcGFueSwgY29udGV4dEphLmxhbmcsIGNvbnRleHRKYS5jb2RlXSxcclxuICAgICAgICAgIGNvbnRleHRKYVxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcblxyXG4gIGFzeW5jIGRlbGV0ZUVtcGxveWVlKGNvbnRleHQ6IGFueSkge1xyXG4gICAgbGV0IHJlc3VsdCA9IGF3YWl0IHRoaXMuZW1wbG95ZWVSZXBvc2l0b3J5LmRlbGV0ZSh7IGNvZGU6IGNvbnRleHQgfSk7XHJcbiAgICBpZiAocmVzdWx0LmFmZmVjdGVkID4gMCkge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcblxyXG4gIGFzeW5jIGRlbGV0ZUVtcGxveWVlcyhjb250ZXh0OiBhbnlbXSkge1xyXG4gICAgbGV0IHJlc3VsdCA9IGF3YWl0IHRoaXMuZW1wbG95ZWVSZXBvc2l0b3J5LmRlbGV0ZShjb250ZXh0KTtcclxuICAgIGlmIChyZXN1bHQuYWZmZWN0ZWQgPiAwKSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxufVxyXG4iXX0=